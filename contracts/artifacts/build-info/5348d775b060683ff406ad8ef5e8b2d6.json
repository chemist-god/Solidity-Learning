{
	"id": "5348d775b060683ff406ad8ef5e8b2d6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SelfDestruct.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\n\r\ncontract SelfDestructSender {\r\n    address payable public vault = payable(0x5B9AFe590174Cddd1C99374DEC490A87f4D04776);\r\n\r\n    constructor() payable {\r\n        require(msg.value == 0.0005 ether, \"Must send exactly 0.0005 ether\");\r\n        selfdestruct(vault);\r\n    }\r\n    \r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/SelfDestruct.sol": {
				"SelfDestructSender": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "vault",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SelfDestruct.sol\":60:334  contract SelfDestructSender {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SelfDestruct.sol\":134:176  0x5B9AFe590174Cddd1C99374DEC490A87f4D04776 */\n  0x5b9afe590174cddd1c99374dec490a87f4d04776\n    /* \"contracts/SelfDestruct.sol\":95:177  address payable public vault = payable(0x5B9AFe590174Cddd1C99374DEC490A87f4D04776) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SelfDestruct.sol\":240:252  0.0005 ether */\n  0x01c6bf52634000\n    /* \"contracts/SelfDestruct.sol\":227:236  msg.value */\n  callvalue\n    /* \"contracts/SelfDestruct.sol\":227:252  msg.value == 0.0005 ether */\n  eq\n    /* \"contracts/SelfDestruct.sol\":219:287  require(msg.value == 0.0005 ether, \"Must send exactly 0.0005 ether\") */\n  tag_3\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_4\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_3:\n    /* \"contracts/SelfDestruct.sol\":311:316  vault */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/SelfDestruct.sol\":298:317  selfdestruct(vault) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  selfdestruct\n    /* \"#utility.yul\":7:176   */\ntag_7:\n    /* \"#utility.yul\":91:102   */\n  0x00\n    /* \"#utility.yul\":125:131   */\n  dup3\n    /* \"#utility.yul\":120:123   */\n  dup3\n    /* \"#utility.yul\":113:132   */\n  mstore\n    /* \"#utility.yul\":165:169   */\n  0x20\n    /* \"#utility.yul\":160:163   */\n  dup3\n    /* \"#utility.yul\":156:170   */\n  add\n    /* \"#utility.yul\":141:170   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:176   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":182:362   */\ntag_8:\n    /* \"#utility.yul\":322:354   */\n  0x4d7573742073656e642065786163746c7920302e303030352065746865720000\n    /* \"#utility.yul\":318:319   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup3\n    /* \"#utility.yul\":306:320   */\n  add\n    /* \"#utility.yul\":299:355   */\n  mstore\n    /* \"#utility.yul\":182:362   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":368:734   */\ntag_9:\n    /* \"#utility.yul\":510:513   */\n  0x00\n    /* \"#utility.yul\":531:598   */\n  tag_14\n    /* \"#utility.yul\":595:597   */\n  0x1e\n    /* \"#utility.yul\":590:593   */\n  dup4\n    /* \"#utility.yul\":531:598   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":524:598   */\n  swap2\n  pop\n    /* \"#utility.yul\":607:700   */\n  tag_15\n    /* \"#utility.yul\":696:699   */\n  dup3\n    /* \"#utility.yul\":607:700   */\n  tag_8\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":725:727   */\n  0x20\n    /* \"#utility.yul\":720:723   */\n  dup3\n    /* \"#utility.yul\":716:728   */\n  add\n    /* \"#utility.yul\":709:728   */\n  swap1\n  pop\n    /* \"#utility.yul\":368:734   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":740:1159   */\ntag_5:\n    /* \"#utility.yul\":906:910   */\n  0x00\n    /* \"#utility.yul\":944:946   */\n  0x20\n    /* \"#utility.yul\":933:942   */\n  dup3\n    /* \"#utility.yul\":929:947   */\n  add\n    /* \"#utility.yul\":921:947   */\n  swap1\n  pop\n    /* \"#utility.yul\":993:1002   */\n  dup2\n    /* \"#utility.yul\":987:991   */\n  dup2\n    /* \"#utility.yul\":983:1003   */\n  sub\n    /* \"#utility.yul\":979:980   */\n  0x00\n    /* \"#utility.yul\":968:977   */\n  dup4\n    /* \"#utility.yul\":964:981   */\n  add\n    /* \"#utility.yul\":957:1004   */\n  mstore\n    /* \"#utility.yul\":1021:1152   */\n  tag_17\n    /* \"#utility.yul\":1147:1151   */\n  dup2\n    /* \"#utility.yul\":1021:1152   */\n  tag_9\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":1013:1152   */\n  swap1\n  pop\n    /* \"#utility.yul\":740:1159   */\n  swap2\n  swap1\n  pop\n  jump\t// out\nstop\n\nsub_0: assembly {\n        /* \"contracts/SelfDestruct.sol\":60:334  contract SelfDestructSender {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xfbfa77cf\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SelfDestruct.sol\":95:177  address payable public vault = payable(0x5B9AFe590174Cddd1C99374DEC490A87f4D04776) */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:243   */\n    tag_9:\n        /* \"#utility.yul\":184:191   */\n      0x00\n        /* \"#utility.yul\":213:237   */\n      tag_14\n        /* \"#utility.yul\":231:236   */\n      dup3\n        /* \"#utility.yul\":213:237   */\n      tag_8\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":202:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":249:391   */\n    tag_10:\n        /* \"#utility.yul\":352:384   */\n      tag_16\n        /* \"#utility.yul\":378:383   */\n      dup2\n        /* \"#utility.yul\":352:384   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":347:350   */\n      dup3\n        /* \"#utility.yul\":340:385   */\n      mstore\n        /* \"#utility.yul\":249:391   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:651   */\n    tag_7:\n        /* \"#utility.yul\":506:510   */\n      0x00\n        /* \"#utility.yul\":544:546   */\n      0x20\n        /* \"#utility.yul\":533:542   */\n      dup3\n        /* \"#utility.yul\":529:547   */\n      add\n        /* \"#utility.yul\":521:547   */\n      swap1\n      pop\n        /* \"#utility.yul\":557:644   */\n      tag_18\n        /* \"#utility.yul\":641:642   */\n      0x00\n        /* \"#utility.yul\":630:639   */\n      dup4\n        /* \"#utility.yul\":626:643   */\n      add\n        /* \"#utility.yul\":617:623   */\n      dup5\n        /* \"#utility.yul\":557:644   */\n      tag_10\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":397:651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a28fe1f4378759bf8777e6b88c0f1335f0e44a109d6039c17249f59d081b201d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1162:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "4d7573742073656e642065786163746c7920302e30303035206574686572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:32:1",
																		"type": "",
																		"value": "Must send exactly 0.0005 ether"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "514:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "524:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "590:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "595:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "531:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "531:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "524:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "696:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa",
																	"nodeType": "YulIdentifier",
																	"src": "607:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "607:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "709:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "720:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "725:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "709:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "502:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "510:3:1",
														"type": ""
													}
												],
												"src": "368:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "911:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "921:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "933:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "944:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "929:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "921:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "968:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "979:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "987:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "957:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "957:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1013:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1147:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1021:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1021:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1013:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "891:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "906:4:1",
														"type": ""
													}
												],
												"src": "740:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send exactly 0.0005 ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052735b9afe590174cddd1c99374dec490a87f4d047765f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506601c6bf5263400034146100a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009790610132565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b5f82825260208201905092915050565b7f4d7573742073656e642065786163746c7920302e3030303520657468657200005f82015250565b5f61011c601e836100d8565b9150610127826100e8565b602082019050919050565b5f6020820190508181035f83015261014981610110565b905091905056fe",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x5B9AFE590174CDDD1C99374DEC490A87F4D04776 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0x1C6BF52634000 CALLVALUE EQ PUSH2 0xA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97 SWAP1 PUSH2 0x132 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642065786163746C7920302E303030352065746865720000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11C PUSH1 0x1E DUP4 PUSH2 0xD8 JUMP JUMPDEST SWAP2 POP PUSH2 0x127 DUP3 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x149 DUP2 PUSH2 0x110 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID ",
							"sourceMap": "60:274:0:-:0;;;134:42;95:82;;;;;;;;;;;;;;;;;;;;240:12;227:9;:25;219:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;311:5;;;;;;;;;;298:19;;;7:169:1;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:180::-;322:32;318:1;310:6;306:14;299:56;182:180;:::o;368:366::-;510:3;531:67;595:2;590:3;531:67;:::i;:::-;524:74;;607:93;696:3;607:93;:::i;:::-;725:2;720:3;716:12;709:19;;368:366;;;:::o;740:419::-;906:4;944:2;933:9;929:18;921:26;;993:9;987:4;983:20;979:1;968:9;964:17;957:47;1021:131;1147:4;1021:131;:::i;:::-;1013:139;;740:419;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@vault_7": {
									"entryPoint": 68,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:654:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "192:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "202:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "231:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "213:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "202:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "174:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "184:7:1",
														"type": ""
													}
												],
												"src": "139:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "330:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "347:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "378:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "352:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "352:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "340:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "340:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "318:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "325:3:1",
														"type": ""
													}
												],
												"src": "249:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "617:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "630:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "641:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "626:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "557:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "557:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "483:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "495:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "506:4:1",
														"type": ""
													}
												],
												"src": "397:254:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106026575f3560e01c8063fbfa77cf14602a575b5f80fd5b60306044565b604051603b919060a2565b60405180910390f35b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f608e826067565b9050919050565b609c816086565b82525050565b5f60208201905060b35f8301846095565b9291505056fea2646970667358221220a28fe1f4378759bf8777e6b88c0f1335f0e44a109d6039c17249f59d081b201d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x26 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFBFA77CF EQ PUSH1 0x2A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x30 PUSH1 0x44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3B SWAP2 SWAP1 PUSH1 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8E DUP3 PUSH1 0x67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9C DUP2 PUSH1 0x86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB3 PUSH0 DUP4 ADD DUP5 PUSH1 0x95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP16 0xE1 DELEGATECALL CALLDATACOPY DUP8 MSIZE 0xBF DUP8 PUSH24 0xE6B88C0F1335F0E44A109D6039C17249F59D081B201D6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "60:274:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;95:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "47800",
								"executionCost": "54047",
								"totalCost": "101847"
							},
							"external": {
								"vault()": "2483"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 334,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 334,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 334,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 134,
									"end": 176,
									"name": "PUSH",
									"source": 0,
									"value": "5B9AFE590174CDDD1C99374DEC490A87F4D04776"
								},
								{
									"begin": 95,
									"end": 177,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 177,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 95,
									"end": 177,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 177,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 95,
									"end": 177,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 95,
									"end": 177,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 240,
									"end": 252,
									"name": "PUSH",
									"source": 0,
									"value": "1C6BF52634000"
								},
								{
									"begin": 227,
									"end": 236,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 227,
									"end": 252,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 219,
									"end": 287,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 219,
									"end": 287,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 287,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 219,
									"end": 287,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 219,
									"end": 287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 219,
									"end": 287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 219,
									"end": 287,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 219,
									"end": 287,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 219,
									"end": 287,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 219,
									"end": 287,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 311,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 316,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 311,
									"end": 316,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 311,
									"end": 316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 311,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 311,
									"end": 316,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 311,
									"end": 316,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 311,
									"end": 316,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 311,
									"end": 316,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 311,
									"end": 316,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 298,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 298,
									"end": 317,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 298,
									"end": 317,
									"name": "SELFDESTRUCT",
									"source": 0
								},
								{
									"begin": 7,
									"end": 176,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 7,
									"end": 176,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 91,
									"end": 102,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 131,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 120,
									"end": 123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 113,
									"end": 132,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 165,
									"end": 169,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 160,
									"end": 163,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 170,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 141,
									"end": 170,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 141,
									"end": 170,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 182,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 182,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 322,
									"end": 354,
									"name": "PUSH",
									"source": 1,
									"value": "4D7573742073656E642065786163746C7920302E303030352065746865720000"
								},
								{
									"begin": 318,
									"end": 319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 306,
									"end": 320,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 299,
									"end": 355,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 182,
									"end": 362,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 182,
									"end": 362,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 368,
									"end": 734,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 368,
									"end": 734,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 510,
									"end": 513,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 595,
									"end": 597,
									"name": "PUSH",
									"source": 1,
									"value": "1E"
								},
								{
									"begin": 590,
									"end": 593,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 531,
									"end": 598,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 531,
									"end": 598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 531,
									"end": 598,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 531,
									"end": 598,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 524,
									"end": 598,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 524,
									"end": 598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 607,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 607,
									"end": 700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 607,
									"end": 700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 607,
									"end": 700,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 607,
									"end": 700,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 725,
									"end": 727,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 720,
									"end": 723,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 716,
									"end": 728,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 709,
									"end": 728,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 709,
									"end": 728,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 368,
									"end": 734,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 368,
									"end": 734,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 368,
									"end": 734,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 368,
									"end": 734,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 740,
									"end": 1159,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 740,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 946,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 942,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 929,
									"end": 947,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 921,
									"end": 947,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 921,
									"end": 947,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 987,
									"end": 991,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1003,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 979,
									"end": 980,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 968,
									"end": 977,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 964,
									"end": 981,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1004,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1147,
									"end": 1151,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1021,
									"end": 1152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1152,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1021,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1152,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 740,
									"end": 1159,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 740,
									"end": 1159,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 740,
									"end": 1159,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 740,
									"end": 1159,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a28fe1f4378759bf8777e6b88c0f1335f0e44a109d6039c17249f59d081b201d64736f6c63430008140033",
									".code": [
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "FBFA77CF"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 95,
											"end": 177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 95,
											"end": 177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 95,
											"end": 177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 95,
											"end": 177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 213,
											"end": 237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 213,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 249,
											"end": 391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 352,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 352,
											"end": 384,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 397,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 529,
											"end": 547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 641,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 626,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 623,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 557,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 644,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/SelfDestruct.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"vault()": "fbfa77cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SelfDestruct.sol\":\"SelfDestructSender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SelfDestruct.sol\":{\"keccak256\":\"0x2f3a3a117d6bbc60788f8762a51db989aa864d88c4d4dae7066feb4465a88335\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49af943998c85fe76c2e528b83e3d2eb35d6754ce51c98b6f8b74e079540d6e9\",\"dweb:/ipfs/QmSrRkxTBCWT9vdjb9Dh7DvyW7Zy318yno2mQiSGYhiGL7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/SelfDestruct.sol:SelfDestructSender",
								"label": "vault",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5159",
				"formattedMessage": "Warning: \"selfdestruct\" has been deprecated. The underlying opcode will eventually undergo breaking changes, and its use is not recommended.\n --> contracts/SelfDestruct.sol:9:9:\n  |\n9 |         selfdestruct(vault);\n  |         ^^^^^^^^^^^^\n\n",
				"message": "\"selfdestruct\" has been deprecated. The underlying opcode will eventually undergo breaking changes, and its use is not recommended.",
				"severity": "warning",
				"sourceLocation": {
					"end": 310,
					"file": "contracts/SelfDestruct.sol",
					"start": 298
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/SelfDestruct.sol": {
				"ast": {
					"absolutePath": "contracts/SelfDestruct.sol",
					"exportedSymbols": {
						"SelfDestructSender": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SelfDestructSender",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "SelfDestructSender",
							"nameLocation": "69:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fbfa77cf",
									"id": 7,
									"mutability": "mutable",
									"name": "vault",
									"nameLocation": "118:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 24,
									"src": "95:82:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "95:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307835423941466535393031373443646464314339393337344445433439304138376634443034373736",
												"id": 5,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "134:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x5B9AFe590174Cddd1C99374DEC490A87f4D04776"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 4,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "126:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "126:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "126:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "208:117:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 11,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "227:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "231:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "227:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "302e30303035",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "240:12:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500000000000000_by_1",
																	"typeString": "int_const 500000000000000"
																},
																"value": "0.0005"
															},
															"src": "227:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642065786163746c7920302e30303035206574686572",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "254:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa",
																"typeString": "literal_string \"Must send exactly 0.0005 ether\""
															},
															"value": "Must send exactly 0.0005 ether"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_08dabfb2b1f4f4e52a501c3bec2190759af6483a9723c0182c696b4f9813ebaa",
																"typeString": "literal_string \"Must send exactly 0.0005 ether\""
															}
														],
														"id": 10,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "219:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "219:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 19,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "311:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 18,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "298:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "298:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "298:19:0"
											}
										]
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "197:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:0:0"
									},
									"scope": 24,
									"src": "186:139:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 25,
							"src": "60:274:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:303:0"
				},
				"id": 0
			}
		}
	}
}