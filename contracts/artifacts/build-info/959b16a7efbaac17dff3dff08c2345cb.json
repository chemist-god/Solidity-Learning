{
	"id": "959b16a7efbaac17dff3dff08c2345cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Practice.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.26;\r\n\r\ncontract MyPractice {\r\n\r\n\r\n    //starting with Array\r\n        //have to declare an array of eg names\r\n    // string [] public employees = [\"nathan\", \"mariam\", \"chris\"];\r\n\r\n    // //add new worker\r\n    // function addEmployee(string memory _name) public {\r\n    //     employees.push(_name);\r\n    // }\r\n\r\n    // //get employee\r\n    // function getEmployee(uint _index) public view returns (string memory){\r\n    //     return employees[_index];\r\n    // }\r\n\r\n\r\n    //moving on with enum\r\n       // using traffic light as ec=xample \r\n    enum TrafficLight {Red, Yello, Green}\r\n\r\n    //define current state of light\r\n        TrafficLight public currentLight = TrafficLight.Red;\r\n\r\n    //change the light\r\n    function changeLight() public {\r\n        if (currentLight == TrafficLight.Red) {\r\n            currentLight = TrafficLight.Green;\r\n        } else if (currentLight == TrafficLight.Green){\r\n            currentLight = TrafficLight.Yello;\r\n        }else{\r\n            currentLight = TrafficLight.Red;\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Practice.sol": {
				"MyPractice": {
					"abi": [
						{
							"inputs": [],
							"name": "changeLight",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentLight",
							"outputs": [
								{
									"internalType": "enum MyPractice.TrafficLight",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Practice.sol\":60:1079  contract MyPractice {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Practice.sol\":714:730  TrafficLight.Red */\n  0x00\n    /* \"contracts/Practice.sol\":679:730  TrafficLight public currentLight = TrafficLight.Red */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x02\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  tag_2\n  tag_3\n  jump\t// in\ntag_2:\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Practice.sol\":60:1079  contract MyPractice {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  jump(tag_5)\n    /* \"#utility.yul\":7:187   */\ntag_3:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"contracts/Practice.sol\":60:1079  contract MyPractice {... */\ntag_5:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Practice.sol\":60:1079  contract MyPractice {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x284e3ebd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb9c3428e\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Practice.sol\":679:730  TrafficLight public currentLight = TrafficLight.Red */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Practice.sol\":763:1076  function changeLight() public {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/Practice.sol\":679:730  TrafficLight public currentLight = TrafficLight.Red */\n    tag_6:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Practice.sol\":763:1076  function changeLight() public {... */\n    tag_10:\n        /* \"contracts/Practice.sol\":824:840  TrafficLight.Red */\n      0x00\n        /* \"contracts/Practice.sol\":808:840  currentLight == TrafficLight.Red */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_12\n      jumpi\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n    tag_12:\n        /* \"contracts/Practice.sol\":808:820  currentLight */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Practice.sol\":808:840  currentLight == TrafficLight.Red */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_15\n      jumpi\n      tag_16\n      tag_14\n      jump\t// in\n    tag_16:\n    tag_15:\n      sub\n        /* \"contracts/Practice.sol\":804:1069  if (currentLight == TrafficLight.Red) {... */\n      tag_17\n      jumpi\n        /* \"contracts/Practice.sol\":872:890  TrafficLight.Green */\n      0x02\n        /* \"contracts/Practice.sol\":857:869  currentLight */\n      0x00\n      dup1\n        /* \"contracts/Practice.sol\":857:890  currentLight = TrafficLight.Green */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      tag_19\n      tag_14\n      jump\t// in\n    tag_19:\n    tag_18:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Practice.sol\":804:1069  if (currentLight == TrafficLight.Red) {... */\n      jump(tag_20)\n    tag_17:\n        /* \"contracts/Practice.sol\":928:946  TrafficLight.Green */\n      0x02\n        /* \"contracts/Practice.sol\":912:946  currentLight == TrafficLight.Green */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      tag_22\n      tag_14\n      jump\t// in\n    tag_22:\n    tag_21:\n        /* \"contracts/Practice.sol\":912:924  currentLight */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Practice.sol\":912:946  currentLight == TrafficLight.Green */\n      0x02\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      tag_24\n      tag_14\n      jump\t// in\n    tag_24:\n    tag_23:\n      sub\n        /* \"contracts/Practice.sol\":908:1069  if (currentLight == TrafficLight.Green){... */\n      tag_25\n      jumpi\n        /* \"contracts/Practice.sol\":977:995  TrafficLight.Yello */\n      0x01\n        /* \"contracts/Practice.sol\":962:974  currentLight */\n      0x00\n      dup1\n        /* \"contracts/Practice.sol\":962:995  currentLight = TrafficLight.Yello */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_26\n      jumpi\n      tag_27\n      tag_14\n      jump\t// in\n    tag_27:\n    tag_26:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Practice.sol\":908:1069  if (currentLight == TrafficLight.Green){... */\n      jump(tag_28)\n    tag_25:\n        /* \"contracts/Practice.sol\":1041:1057  TrafficLight.Red */\n      0x00\n        /* \"contracts/Practice.sol\":1026:1038  currentLight */\n      dup1\n      0x00\n        /* \"contracts/Practice.sol\":1026:1057  currentLight = TrafficLight.Red */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x02\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      tag_30\n      tag_14\n      jump\t// in\n    tag_30:\n    tag_29:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Practice.sol\":908:1069  if (currentLight == TrafficLight.Green){... */\n    tag_28:\n        /* \"contracts/Practice.sol\":804:1069  if (currentLight == TrafficLight.Red) {... */\n    tag_20:\n        /* \"contracts/Practice.sol\":763:1076  function changeLight() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_14:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x21\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:312   */\n    tag_31:\n        /* \"#utility.yul\":280:281   */\n      0x03\n        /* \"#utility.yul\":273:278   */\n      dup2\n        /* \"#utility.yul\":270:282   */\n      lt\n        /* \"#utility.yul\":260:306   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":286:304   */\n      tag_39\n      tag_14\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":260:306   */\n    tag_38:\n        /* \"#utility.yul\":193:312   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":318:457   */\n    tag_32:\n        /* \"#utility.yul\":369:376   */\n      0x00\n        /* \"#utility.yul\":398:403   */\n      dup2\n        /* \"#utility.yul\":387:403   */\n      swap1\n      pop\n        /* \"#utility.yul\":404:451   */\n      tag_41\n        /* \"#utility.yul\":445:450   */\n      dup3\n        /* \"#utility.yul\":404:451   */\n      tag_31\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":318:457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":463:602   */\n    tag_33:\n        /* \"#utility.yul\":525:534   */\n      0x00\n        /* \"#utility.yul\":558:596   */\n      tag_43\n        /* \"#utility.yul\":590:595   */\n      dup3\n        /* \"#utility.yul\":558:596   */\n      tag_32\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":545:596   */\n      swap1\n      pop\n        /* \"#utility.yul\":463:602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":608:763   */\n    tag_34:\n        /* \"#utility.yul\":707:756   */\n      tag_45\n        /* \"#utility.yul\":750:755   */\n      dup2\n        /* \"#utility.yul\":707:756   */\n      tag_33\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":702:705   */\n      dup3\n        /* \"#utility.yul\":695:757   */\n      mstore\n        /* \"#utility.yul\":608:763   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1015   */\n    tag_8:\n        /* \"#utility.yul\":874:878   */\n      0x00\n        /* \"#utility.yul\":912:914   */\n      0x20\n        /* \"#utility.yul\":901:910   */\n      dup3\n        /* \"#utility.yul\":897:915   */\n      add\n        /* \"#utility.yul\":889:915   */\n      swap1\n      pop\n        /* \"#utility.yul\":925:1008   */\n      tag_47\n        /* \"#utility.yul\":1005:1006   */\n      0x00\n        /* \"#utility.yul\":994:1003   */\n      dup4\n        /* \"#utility.yul\":990:1007   */\n      add\n        /* \"#utility.yul\":981:987   */\n      dup5\n        /* \"#utility.yul\":925:1008   */\n      tag_34\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":769:1015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208f9cdfe2e6406726ead21146356cdb23f3e83b7e45e197a7bf45afaf4623c56064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"panic_error_0x21": {
									"entryPoint": 56,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:190:1",
										"nodeType": "YulBlock",
										"src": "0:190:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:1",
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:1",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:1",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nativeSrc": "45:88:1",
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nativeSrc": "45:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:1",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:1",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nativeSrc": "142:15:1",
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nativeSrc": "142:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:1",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:1",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:15:1",
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nativeSrc": "166:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f805f6101000a81548160ff0219169083600281111560245760236038565b5b02179055503480156033575f80fd5b506065565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b610228806100725f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063284e3ebd14610038578063b9c3428e14610056575b5f80fd5b610040610060565b60405161004d91906101d9565b60405180910390f35b61005e610070565b005b5f8054906101000a900460ff1681565b5f600281111561008357610082610166565b5b5f8054906101000a900460ff1660028111156100a2576100a1610166565b5b036100d55760025f806101000a81548160ff021916908360028111156100cb576100ca610166565b5b0217905550610164565b6002808111156100e8576100e7610166565b5b5f8054906101000a900460ff16600281111561010757610106610166565b5b0361013a5760015f806101000a81548160ff021916908360028111156101305761012f610166565b5b0217905550610163565b5f805f6101000a81548160ff0219169083600281111561015d5761015c610166565b5b02179055505b5b565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600381106101a4576101a3610166565b5b50565b5f8190506101b482610193565b919050565b5f6101c3826101a7565b9050919050565b6101d3816101b9565b82525050565b5f6020820190506101ec5f8301846101ca565b9291505056fea26469706673582212208f9cdfe2e6406726ead21146356cdb23f3e83b7e45e197a7bf45afaf4623c56064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH1 0x24 JUMPI PUSH1 0x23 PUSH1 0x38 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x33 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x228 DUP1 PUSH2 0x72 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x284E3EBD EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xB9C3428E EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x70 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x83 JUMPI PUSH2 0x82 PUSH2 0x166 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA2 JUMPI PUSH2 0xA1 PUSH2 0x166 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD5 JUMPI PUSH1 0x2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCB JUMPI PUSH2 0xCA PUSH2 0x166 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x164 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xE8 JUMPI PUSH2 0xE7 PUSH2 0x166 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x107 JUMPI PUSH2 0x106 PUSH2 0x166 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x13A JUMPI PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x130 JUMPI PUSH2 0x12F PUSH2 0x166 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x163 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15D JUMPI PUSH2 0x15C PUSH2 0x166 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1A4 JUMPI PUSH2 0x1A3 PUSH2 0x166 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1B4 DUP3 PUSH2 0x193 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3 DUP3 PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3 DUP2 PUSH2 0x1B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC PUSH0 DUP4 ADD DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SWAP13 0xDF 0xE2 0xE6 BLOCKHASH PUSH8 0x26EAD21146356CDB 0x23 RETURN 0xE8 EXTCODESIZE PUSH31 0x45E197A7BF45AFAF4623C56064736F6C634300081A00330000000000000000 ",
							"sourceMap": "60:1019:0:-:0;;;714:16;679:51;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;60:1019;;;;;;;;;;;;7:180:1;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;60:1019:0;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@changeLight_42": {
									"entryPoint": 112,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentLight_10": {
									"entryPoint": 96,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_TrafficLight_$5_to_t_uint8_fromStack": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_enum$_TrafficLight_$5__to_t_uint8__fromStack_reversed": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_enum$_TrafficLight_$5": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_TrafficLight_$5_to_t_uint8": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_TrafficLight_$5": {
									"entryPoint": 403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1018:1",
										"nodeType": "YulBlock",
										"src": "0:1018:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:1",
													"nodeType": "YulBlock",
													"src": "35:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:1",
																		"nodeType": "YulLiteral",
																		"src": "52:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:1",
																		"nodeType": "YulLiteral",
																		"src": "55:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:1"
																},
																"nativeSrc": "45:88:1",
																"nodeType": "YulFunctionCall",
																"src": "45:88:1"
															},
															"nativeSrc": "45:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:1",
																		"nodeType": "YulLiteral",
																		"src": "149:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:1",
																		"nodeType": "YulLiteral",
																		"src": "152:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:1"
																},
																"nativeSrc": "142:15:1",
																"nodeType": "YulFunctionCall",
																"src": "142:15:1"
															},
															"nativeSrc": "142:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:1",
																		"nodeType": "YulLiteral",
																		"src": "173:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:1",
																		"nodeType": "YulLiteral",
																		"src": "176:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nativeSrc": "166:15:1",
																"nodeType": "YulFunctionCall",
																"src": "166:15:1"
															},
															"nativeSrc": "166:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:1"
											},
											{
												"body": {
													"nativeSrc": "250:62:1",
													"nodeType": "YulBlock",
													"src": "250:62:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "284:22:1",
																"nodeType": "YulBlock",
																"src": "284:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "286:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "286:16:1"
																			},
																			"nativeSrc": "286:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "286:18:1"
																		},
																		"nativeSrc": "286:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "286:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "273:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "273:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "280:1:1",
																				"nodeType": "YulLiteral",
																				"src": "280:1:1",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "270:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "270:2:1"
																		},
																		"nativeSrc": "270:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "270:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "263:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "263:6:1"
																},
																"nativeSrc": "263:20:1",
																"nodeType": "YulFunctionCall",
																"src": "263:20:1"
															},
															"nativeSrc": "260:46:1",
															"nodeType": "YulIf",
															"src": "260:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_TrafficLight_$5",
												"nativeSrc": "193:119:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "243:5:1",
														"nodeType": "YulTypedName",
														"src": "243:5:1",
														"type": ""
													}
												],
												"src": "193:119:1"
											},
											{
												"body": {
													"nativeSrc": "377:80:1",
													"nodeType": "YulBlock",
													"src": "377:80:1",
													"statements": [
														{
															"nativeSrc": "387:16:1",
															"nodeType": "YulAssignment",
															"src": "387:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "398:5:1",
																"nodeType": "YulIdentifier",
																"src": "398:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "387:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "387:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "445:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_TrafficLight_$5",
																	"nativeSrc": "404:40:1",
																	"nodeType": "YulIdentifier",
																	"src": "404:40:1"
																},
																"nativeSrc": "404:47:1",
																"nodeType": "YulFunctionCall",
																"src": "404:47:1"
															},
															"nativeSrc": "404:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "404:47:1"
														}
													]
												},
												"name": "cleanup_t_enum$_TrafficLight_$5",
												"nativeSrc": "318:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "359:5:1",
														"nodeType": "YulTypedName",
														"src": "359:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "369:7:1",
														"nodeType": "YulTypedName",
														"src": "369:7:1",
														"type": ""
													}
												],
												"src": "318:139:1"
											},
											{
												"body": {
													"nativeSrc": "535:67:1",
													"nodeType": "YulBlock",
													"src": "535:67:1",
													"statements": [
														{
															"nativeSrc": "545:51:1",
															"nodeType": "YulAssignment",
															"src": "545:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "590:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "590:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_TrafficLight_$5",
																	"nativeSrc": "558:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "558:31:1"
																},
																"nativeSrc": "558:38:1",
																"nodeType": "YulFunctionCall",
																"src": "558:38:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "545:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_TrafficLight_$5_to_t_uint8",
												"nativeSrc": "463:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "515:5:1",
														"nodeType": "YulTypedName",
														"src": "515:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "525:9:1",
														"nodeType": "YulTypedName",
														"src": "525:9:1",
														"type": ""
													}
												],
												"src": "463:139:1"
											},
											{
												"body": {
													"nativeSrc": "685:78:1",
													"nodeType": "YulBlock",
													"src": "685:78:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "702:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "702:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "750:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "750:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_TrafficLight_$5_to_t_uint8",
																			"nativeSrc": "707:42:1",
																			"nodeType": "YulIdentifier",
																			"src": "707:42:1"
																		},
																		"nativeSrc": "707:49:1",
																		"nodeType": "YulFunctionCall",
																		"src": "707:49:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "695:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:1"
																},
																"nativeSrc": "695:62:1",
																"nodeType": "YulFunctionCall",
																"src": "695:62:1"
															},
															"nativeSrc": "695:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "695:62:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_TrafficLight_$5_to_t_uint8_fromStack",
												"nativeSrc": "608:155:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "673:5:1",
														"nodeType": "YulTypedName",
														"src": "673:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "680:3:1",
														"nodeType": "YulTypedName",
														"src": "680:3:1",
														"type": ""
													}
												],
												"src": "608:155:1"
											},
											{
												"body": {
													"nativeSrc": "879:136:1",
													"nodeType": "YulBlock",
													"src": "879:136:1",
													"statements": [
														{
															"nativeSrc": "889:26:1",
															"nodeType": "YulAssignment",
															"src": "889:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "901:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "901:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "912:2:1",
																		"nodeType": "YulLiteral",
																		"src": "912:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "897:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "897:3:1"
																},
																"nativeSrc": "897:18:1",
																"nodeType": "YulFunctionCall",
																"src": "897:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "889:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "889:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "981:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "981:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "994:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1005:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1005:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "990:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "990:3:1"
																		},
																		"nativeSrc": "990:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "990:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_TrafficLight_$5_to_t_uint8_fromStack",
																	"nativeSrc": "925:55:1",
																	"nodeType": "YulIdentifier",
																	"src": "925:55:1"
																},
																"nativeSrc": "925:83:1",
																"nodeType": "YulFunctionCall",
																"src": "925:83:1"
															},
															"nativeSrc": "925:83:1",
															"nodeType": "YulExpressionStatement",
															"src": "925:83:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_TrafficLight_$5__to_t_uint8__fromStack_reversed",
												"nativeSrc": "769:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "851:9:1",
														"nodeType": "YulTypedName",
														"src": "851:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "863:6:1",
														"nodeType": "YulTypedName",
														"src": "863:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "874:4:1",
														"nodeType": "YulTypedName",
														"src": "874:4:1",
														"type": ""
													}
												],
												"src": "769:246:1"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_TrafficLight_$5(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_TrafficLight_$5(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_TrafficLight_$5(value)\n    }\n\n    function convert_t_enum$_TrafficLight_$5_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_TrafficLight_$5(value)\n    }\n\n    function abi_encode_t_enum$_TrafficLight_$5_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_TrafficLight_$5_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_TrafficLight_$5__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_TrafficLight_$5_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063284e3ebd14610038578063b9c3428e14610056575b5f80fd5b610040610060565b60405161004d91906101d9565b60405180910390f35b61005e610070565b005b5f8054906101000a900460ff1681565b5f600281111561008357610082610166565b5b5f8054906101000a900460ff1660028111156100a2576100a1610166565b5b036100d55760025f806101000a81548160ff021916908360028111156100cb576100ca610166565b5b0217905550610164565b6002808111156100e8576100e7610166565b5b5f8054906101000a900460ff16600281111561010757610106610166565b5b0361013a5760015f806101000a81548160ff021916908360028111156101305761012f610166565b5b0217905550610163565b5f805f6101000a81548160ff0219169083600281111561015d5761015c610166565b5b02179055505b5b565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600381106101a4576101a3610166565b5b50565b5f8190506101b482610193565b919050565b5f6101c3826101a7565b9050919050565b6101d3816101b9565b82525050565b5f6020820190506101ec5f8301846101ca565b9291505056fea26469706673582212208f9cdfe2e6406726ead21146356cdb23f3e83b7e45e197a7bf45afaf4623c56064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x284E3EBD EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xB9C3428E EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x70 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x83 JUMPI PUSH2 0x82 PUSH2 0x166 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xA2 JUMPI PUSH2 0xA1 PUSH2 0x166 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xD5 JUMPI PUSH1 0x2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xCB JUMPI PUSH2 0xCA PUSH2 0x166 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x164 JUMP JUMPDEST PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0xE8 JUMPI PUSH2 0xE7 PUSH2 0x166 JUMP JUMPDEST JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x107 JUMPI PUSH2 0x106 PUSH2 0x166 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x13A JUMPI PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x130 JUMPI PUSH2 0x12F PUSH2 0x166 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x163 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x15D JUMPI PUSH2 0x15C PUSH2 0x166 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x1A4 JUMPI PUSH2 0x1A3 PUSH2 0x166 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1B4 DUP3 PUSH2 0x193 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3 DUP3 PUSH2 0x1A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3 DUP2 PUSH2 0x1B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC PUSH0 DUP4 ADD DUP5 PUSH2 0x1CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 SWAP13 0xDF 0xE2 0xE6 BLOCKHASH PUSH8 0x26EAD21146356CDB 0x23 RETURN 0xE8 EXTCODESIZE PUSH31 0x45E197A7BF45AFAF4623C56064736F6C634300081A00330000000000000000 ",
							"sourceMap": "60:1019:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;679:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;763:313;;;:::i;:::-;;679:51;;;;;;;;;;;;:::o;763:313::-;824:16;808:32;;;;;;;;:::i;:::-;;:12;;;;;;;;;;:32;;;;;;;;:::i;:::-;;;804:265;;872:18;857:12;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;804:265;;;928:18;912:34;;;;;;;;:::i;:::-;;:12;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;908:161;;977:18;962:12;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;908:161;;;1041:16;1026:12;;:31;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;908:161;804:265;763:313::o;7:180:1:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:119;280:1;273:5;270:12;260:46;;286:18;;:::i;:::-;260:46;193:119;:::o;318:139::-;369:7;398:5;387:16;;404:47;445:5;404:47;:::i;:::-;318:139;;;:::o;463:::-;525:9;558:38;590:5;558:38;:::i;:::-;545:51;;463:139;;;:::o;608:155::-;707:49;750:5;707:49;:::i;:::-;702:3;695:62;608:155;;:::o;769:246::-;874:4;912:2;901:9;897:18;889:26;;925:83;1005:1;994:9;990:17;981:6;925:83;:::i;:::-;769:246;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "110400",
								"executionCost": "24454",
								"totalCost": "134854"
							},
							"external": {
								"changeLight()": "28854",
								"currentLight()": "2529"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 1079,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 714,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 679,
									"end": 730,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 679,
									"end": 730,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 679,
									"end": 730,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 730,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 679,
									"end": 730,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 679,
									"end": 730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 679,
									"end": 730,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 679,
									"end": 730,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 679,
									"end": 730,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1079,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f9cdfe2e6406726ead21146356cdb23f3e83b7e45e197a7bf45afaf4623c56064736f6c634300081a0033",
									".code": [
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "284E3EBD"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "B9C3428E"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1079,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 679,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 679,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 763,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 763,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 763,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 763,
											"end": 1076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 763,
											"end": 1076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 763,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 763,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 763,
											"end": 1076,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 679,
											"end": 730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 679,
											"end": 730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 763,
											"end": 1076,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 763,
											"end": 1076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 808,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 808,
											"end": 820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 808,
											"end": 820,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 808,
											"end": 820,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 808,
											"end": 820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 808,
											"end": 840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 808,
											"end": 840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 804,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 804,
											"end": 1069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 857,
											"end": 890,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 857,
											"end": 890,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 857,
											"end": 890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 857,
											"end": 890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 857,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 857,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 857,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 857,
											"end": 890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 857,
											"end": 890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 804,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 804,
											"end": 1069,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 804,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 804,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 912,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 924,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 912,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 912,
											"end": 924,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 912,
											"end": 924,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 912,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 912,
											"end": 924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 912,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 912,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 912,
											"end": 946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 908,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 908,
											"end": 1069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 977,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 962,
											"end": 974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 962,
											"end": 995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 962,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 908,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 908,
											"end": 1069,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 908,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 908,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1041,
											"end": 1057,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1026,
											"end": 1057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1026,
											"end": 1057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 908,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 908,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 804,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 804,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 763,
											"end": 1076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 193,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 193,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 280,
											"end": 281,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 273,
											"end": 278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 270,
											"end": 282,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 260,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 260,
											"end": 306,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 286,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 286,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 286,
											"end": 304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 286,
											"end": 304,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 286,
											"end": 304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 306,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 260,
											"end": 306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 193,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 193,
											"end": 312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 457,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 318,
											"end": 457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 369,
											"end": 376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 445,
											"end": 450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 404,
											"end": 451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 404,
											"end": 451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 404,
											"end": 451,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 404,
											"end": 451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 318,
											"end": 457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 318,
											"end": 457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 318,
											"end": 457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 463,
											"end": 602,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 463,
											"end": 602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 590,
											"end": 595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 558,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 558,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 558,
											"end": 596,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 558,
											"end": 596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 545,
											"end": 596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 463,
											"end": 602,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 463,
											"end": 602,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 463,
											"end": 602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 463,
											"end": 602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 608,
											"end": 763,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 608,
											"end": 763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 707,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 750,
											"end": 755,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 707,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 707,
											"end": 756,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 707,
											"end": 756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 695,
											"end": 757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 608,
											"end": 763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 608,
											"end": 763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 608,
											"end": 763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1015,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 769,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 874,
											"end": 878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 901,
											"end": 910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 897,
											"end": 915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 889,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 889,
											"end": 915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1005,
											"end": 1006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1003,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 990,
											"end": 1007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 981,
											"end": 987,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 925,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 925,
											"end": 1008,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 925,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1015,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1015,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Practice.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"changeLight()": "b9c3428e",
							"currentLight()": "284e3ebd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"changeLight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentLight\",\"outputs\":[{\"internalType\":\"enum MyPractice.TrafficLight\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Practice.sol\":\"MyPractice\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Practice.sol\":{\"keccak256\":\"0x1f96b94e0c3e4bf299a2d9d2f7b8b70a4f26e45ef472ca813e07f60ecf13b8c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6535f0fc0d336d3e86a35ac99a18be454b1d4b7464feeb360bde24c7f372809c\",\"dweb:/ipfs/QmWbCCjcZ5bj8Ek1xr88Zk5M9W8hcktjsktAfPswtW9zkm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Practice.sol:MyPractice",
								"label": "currentLight",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(TrafficLight)5"
							}
						],
						"types": {
							"t_enum(TrafficLight)5": {
								"encoding": "inplace",
								"label": "enum MyPractice.TrafficLight",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Practice.sol": {
				"ast": {
					"absolutePath": "contracts/Practice.sol",
					"exportedSymbols": {
						"MyPractice": [
							43
						]
					},
					"id": 44,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyPractice",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 43,
							"linearizedBaseContracts": [
								43
							],
							"name": "MyPractice",
							"nameLocation": "69:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MyPractice.TrafficLight",
									"id": 5,
									"members": [
										{
											"id": 2,
											"name": "Red",
											"nameLocation": "612:3:0",
											"nodeType": "EnumValue",
											"src": "612:3:0"
										},
										{
											"id": 3,
											"name": "Yello",
											"nameLocation": "617:5:0",
											"nodeType": "EnumValue",
											"src": "617:5:0"
										},
										{
											"id": 4,
											"name": "Green",
											"nameLocation": "624:5:0",
											"nodeType": "EnumValue",
											"src": "624:5:0"
										}
									],
									"name": "TrafficLight",
									"nameLocation": "598:12:0",
									"nodeType": "EnumDefinition",
									"src": "593:37:0"
								},
								{
									"constant": false,
									"functionSelector": "284e3ebd",
									"id": 10,
									"mutability": "mutable",
									"name": "currentLight",
									"nameLocation": "699:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 43,
									"src": "679:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_TrafficLight_$5",
										"typeString": "enum MyPractice.TrafficLight"
									},
									"typeName": {
										"id": 7,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 6,
											"name": "TrafficLight",
											"nameLocations": [
												"679:12:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "679:12:0"
										},
										"referencedDeclaration": 5,
										"src": "679:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_TrafficLight_$5",
											"typeString": "enum MyPractice.TrafficLight"
										}
									},
									"value": {
										"expression": {
											"id": 8,
											"name": "TrafficLight",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 5,
											"src": "714:12:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_TrafficLight_$5_$",
												"typeString": "type(enum MyPractice.TrafficLight)"
											}
										},
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberLocation": "727:3:0",
										"memberName": "Red",
										"nodeType": "MemberAccess",
										"referencedDeclaration": 2,
										"src": "714:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_TrafficLight_$5",
											"typeString": "enum MyPractice.TrafficLight"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "793:283:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_TrafficLight_$5",
														"typeString": "enum MyPractice.TrafficLight"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 13,
														"name": "currentLight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "808:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TrafficLight_$5",
															"typeString": "enum MyPractice.TrafficLight"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 14,
															"name": "TrafficLight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "824:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_TrafficLight_$5_$",
																"typeString": "type(enum MyPractice.TrafficLight)"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "837:3:0",
														"memberName": "Red",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2,
														"src": "824:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TrafficLight_$5",
															"typeString": "enum MyPractice.TrafficLight"
														}
													},
													"src": "808:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_TrafficLight_$5",
															"typeString": "enum MyPractice.TrafficLight"
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 23,
															"name": "currentLight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "912:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_TrafficLight_$5",
																"typeString": "enum MyPractice.TrafficLight"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 24,
																"name": "TrafficLight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "928:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_TrafficLight_$5_$",
																	"typeString": "type(enum MyPractice.TrafficLight)"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "941:5:0",
															"memberName": "Green",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4,
															"src": "928:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_TrafficLight_$5",
																"typeString": "enum MyPractice.TrafficLight"
															}
														},
														"src": "912:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 38,
														"nodeType": "Block",
														"src": "1011:58:0",
														"statements": [
															{
																"expression": {
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 33,
																		"name": "currentLight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "1026:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_TrafficLight_$5",
																			"typeString": "enum MyPractice.TrafficLight"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 34,
																			"name": "TrafficLight",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "1041:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_TrafficLight_$5_$",
																				"typeString": "type(enum MyPractice.TrafficLight)"
																			}
																		},
																		"id": 35,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1054:3:0",
																		"memberName": "Red",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2,
																		"src": "1041:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_TrafficLight_$5",
																			"typeString": "enum MyPractice.TrafficLight"
																		}
																	},
																	"src": "1026:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_TrafficLight_$5",
																		"typeString": "enum MyPractice.TrafficLight"
																	}
																},
																"id": 37,
																"nodeType": "ExpressionStatement",
																"src": "1026:31:0"
															}
														]
													},
													"id": 39,
													"nodeType": "IfStatement",
													"src": "908:161:0",
													"trueBody": {
														"id": 32,
														"nodeType": "Block",
														"src": "947:60:0",
														"statements": [
															{
																"expression": {
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 27,
																		"name": "currentLight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "962:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_TrafficLight_$5",
																			"typeString": "enum MyPractice.TrafficLight"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 28,
																			"name": "TrafficLight",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "977:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_TrafficLight_$5_$",
																				"typeString": "type(enum MyPractice.TrafficLight)"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "990:5:0",
																		"memberName": "Yello",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3,
																		"src": "977:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_TrafficLight_$5",
																			"typeString": "enum MyPractice.TrafficLight"
																		}
																	},
																	"src": "962:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_TrafficLight_$5",
																		"typeString": "enum MyPractice.TrafficLight"
																	}
																},
																"id": 31,
																"nodeType": "ExpressionStatement",
																"src": "962:33:0"
															}
														]
													}
												},
												"id": 40,
												"nodeType": "IfStatement",
												"src": "804:265:0",
												"trueBody": {
													"id": 22,
													"nodeType": "Block",
													"src": "842:60:0",
													"statements": [
														{
															"expression": {
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 17,
																	"name": "currentLight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "857:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_TrafficLight_$5",
																		"typeString": "enum MyPractice.TrafficLight"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 18,
																		"name": "TrafficLight",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "872:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_TrafficLight_$5_$",
																			"typeString": "type(enum MyPractice.TrafficLight)"
																		}
																	},
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "885:5:0",
																	"memberName": "Green",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "872:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_TrafficLight_$5",
																		"typeString": "enum MyPractice.TrafficLight"
																	}
																},
																"src": "857:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_TrafficLight_$5",
																	"typeString": "enum MyPractice.TrafficLight"
																}
															},
															"id": 21,
															"nodeType": "ExpressionStatement",
															"src": "857:33:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b9c3428e",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeLight",
									"nameLocation": "772:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "783:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:0:0"
									},
									"scope": 43,
									"src": "763:313:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 44,
							"src": "60:1019:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1046:0"
				},
				"id": 0
			}
		}
	}
}