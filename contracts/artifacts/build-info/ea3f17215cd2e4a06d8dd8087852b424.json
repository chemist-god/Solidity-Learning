{
	"id": "ea3f17215cd2e4a06d8dd8087852b424",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/chemistToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.22;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\";\r\n\r\ncontract ChemistToken is ERC20, Ownable {\r\n    constructor(address recipient, address initialOwner)\r\n        ERC20(\"chemistToken\", \"CHTK\")\r\n        Ownable(initialOwner)\r\n    {\r\n        _mint(recipient, 100 * 10 ** decimals());\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts@5.3.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts@5.3.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.3.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts@5.3.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts@5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.3.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.3.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/chemistToken.sol": {
				"ChemistToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/chemistToken.sol\":264:604  contract ChemistToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/chemistToken.sol\":311:498  constructor(address recipient, address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/chemistToken.sol\":420:432  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0c\n  dup2\n  mstore\n  0x20\n  add\n  0x6368656d697374546f6b656e0000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4348544b00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/chemistToken.sol\":450:490  _mint(recipient, 100 * 10 ** decimals()) */\n  tag_18\n    /* \"contracts/chemistToken.sol\":456:465  recipient */\n  dup3\n    /* \"contracts/chemistToken.sol\":479:489  decimals() */\n  tag_19\n    /* \"contracts/chemistToken.sol\":479:487  decimals */\n  shl(0x20, tag_20)\n    /* \"contracts/chemistToken.sol\":479:489  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/chemistToken.sol\":473:475  10 */\n  0x0a\n    /* \"contracts/chemistToken.sol\":473:489  10 ** decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/chemistToken.sol\":467:470  100 */\n  0x64\n    /* \"contracts/chemistToken.sol\":467:489  100 * 10 ** decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/chemistToken.sol\":450:455  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/chemistToken.sol\":450:490  _mint(recipient, 100 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/chemistToken.sol\":311:498  constructor(address recipient, address initialOwner)... */\n  pop\n  pop\n    /* \"contracts/chemistToken.sol\":264:604  contract ChemistToken is ERC20, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_20:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_38)\ntag_35:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  dup1\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_39:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_47:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_49:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_50:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_86\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_49\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_51:\n    /* \"#utility.yul\":641:665   */\n  tag_88\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_50\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_89:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_52:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_91\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_51\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_94\n  tag_47\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":949:1068   */\ntag_93:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_95\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_52\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_96\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_52\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_53:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_54:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_55:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_56:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_101\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_101:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_103\n  tag_55\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2065:2149   */\ntag_102:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_57:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_58:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_59:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_60:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_108\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_59\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2780:2819   */\n  tag_109\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_59\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_61:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_62:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_63:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_113\n    /* \"#utility.yul\":3169:3203   */\n  tag_114\n    /* \"#utility.yul\":3178:3202   */\n  tag_115\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_61\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3169:3203   */\n  tag_62\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3151:3204   */\n  tag_61\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_64:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_65:\n    /* \"#utility.yul\":3407:3446   */\n  tag_118\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_63\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3468:3559   */\n  tag_119\n    /* \"#utility.yul\":3517:3558   */\n  tag_120\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_64\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_60\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_66:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_67:\n    /* \"#utility.yul\":3728:3760   */\n  tag_123\n  tag_66\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3769:3834   */\n  tag_124\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_65\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_68:\n    /* \"#utility.yul\":3906:4026   */\ntag_126:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_129\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_67\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_126)\ntag_128:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_69:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_132\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_57\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4257:4286   */\n  tag_133\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_58\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_134:\n    /* \"#utility.yul\":4484:4564   */\n  tag_135\n    /* \"#utility.yul\":4540:4562   */\n  tag_136\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_58\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_68\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_131:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_70:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_71:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_139\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_70\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_72:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_141\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_71\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_9:\n    /* \"#utility.yul\":5301:5338   */\n  tag_143\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_53\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_145\n  tag_54\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5389:5445   */\ntag_144:\n    /* \"#utility.yul\":5469:5507   */\n  tag_146\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_56\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5554:5621   */\n  tag_147\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_69\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_150:\n    /* \"#utility.yul\":6495:6562   */\n  tag_151\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_72\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_148)\n    /* \"#utility.yul\":5716:6334   */\ntag_149:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_152\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_57\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_153:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_153)\ntag_155:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_157\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_71\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_156:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_148:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6703   */\ntag_73:\n    /* \"#utility.yul\":6672:6696   */\n  tag_159\n    /* \"#utility.yul\":6690:6695   */\n  dup2\n    /* \"#utility.yul\":6672:6696   */\n  tag_50\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6667:6670   */\n  dup3\n    /* \"#utility.yul\":6660:6697   */\n  mstore\n    /* \"#utility.yul\":6585:6703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6709:6931   */\ntag_14:\n    /* \"#utility.yul\":6802:6806   */\n  0x00\n    /* \"#utility.yul\":6840:6842   */\n  0x20\n    /* \"#utility.yul\":6829:6838   */\n  dup3\n    /* \"#utility.yul\":6825:6843   */\n  add\n    /* \"#utility.yul\":6817:6843   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:6924   */\n  tag_161\n    /* \"#utility.yul\":6921:6922   */\n  0x00\n    /* \"#utility.yul\":6910:6919   */\n  dup4\n    /* \"#utility.yul\":6906:6923   */\n  add\n    /* \"#utility.yul\":6897:6903   */\n  dup5\n    /* \"#utility.yul\":6853:6924   */\n  tag_73\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6709:6931   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6937:7117   */\ntag_74:\n    /* \"#utility.yul\":6985:7062   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6982:6983   */\n  0x00\n    /* \"#utility.yul\":6975:7063   */\n  mstore\n    /* \"#utility.yul\":7082:7086   */\n  0x11\n    /* \"#utility.yul\":7079:7080   */\n  0x04\n    /* \"#utility.yul\":7072:7087   */\n  mstore\n    /* \"#utility.yul\":7106:7110   */\n  0x24\n    /* \"#utility.yul\":7103:7104   */\n  0x00\n    /* \"#utility.yul\":7096:7111   */\n  revert\n    /* \"#utility.yul\":7123:7225   */\ntag_75:\n    /* \"#utility.yul\":7165:7173   */\n  0x00\n    /* \"#utility.yul\":7212:7217   */\n  dup2\n    /* \"#utility.yul\":7209:7210   */\n  0x01\n    /* \"#utility.yul\":7205:7218   */\n  shr\n    /* \"#utility.yul\":7184:7218   */\n  swap1\n  pop\n    /* \"#utility.yul\":7123:7225   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7231:8079   */\ntag_76:\n    /* \"#utility.yul\":7292:7297   */\n  0x00\n    /* \"#utility.yul\":7299:7303   */\n  dup1\n    /* \"#utility.yul\":7323:7329   */\n  dup3\n    /* \"#utility.yul\":7314:7329   */\n  swap2\n  pop\n    /* \"#utility.yul\":7347:7352   */\n  dup4\n    /* \"#utility.yul\":7338:7352   */\n  swap1\n  pop\n    /* \"#utility.yul\":7361:8073   */\ntag_165:\n    /* \"#utility.yul\":7382:7383   */\n  0x01\n    /* \"#utility.yul\":7372:7380   */\n  dup6\n    /* \"#utility.yul\":7369:7384   */\n  gt\n    /* \"#utility.yul\":7361:8073   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7477:7481   */\n  dup1\n    /* \"#utility.yul\":7472:7475   */\n  dup7\n    /* \"#utility.yul\":7468:7482   */\n  div\n    /* \"#utility.yul\":7462:7466   */\n  dup2\n    /* \"#utility.yul\":7459:7483   */\n  gt\n    /* \"#utility.yul\":7456:7506   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":7486:7504   */\n  tag_169\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7456:7506   */\ntag_168:\n    /* \"#utility.yul\":7536:7537   */\n  0x01\n    /* \"#utility.yul\":7526:7534   */\n  dup6\n    /* \"#utility.yul\":7522:7538   */\n  and\n    /* \"#utility.yul\":7519:7970   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":7951:7955   */\n  dup1\n    /* \"#utility.yul\":7944:7949   */\n  dup3\n    /* \"#utility.yul\":7940:7956   */\n  mul\n    /* \"#utility.yul\":7931:7956   */\n  swap2\n  pop\n    /* \"#utility.yul\":7519:7970   */\ntag_170:\n    /* \"#utility.yul\":8001:8005   */\n  dup1\n    /* \"#utility.yul\":7995:7999   */\n  dup2\n    /* \"#utility.yul\":7991:8006   */\n  mul\n    /* \"#utility.yul\":7983:8006   */\n  swap1\n  pop\n    /* \"#utility.yul\":8031:8063   */\n  tag_171\n    /* \"#utility.yul\":8054:8062   */\n  dup6\n    /* \"#utility.yul\":8031:8063   */\n  tag_75\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8019:8063   */\n  swap5\n  pop\n    /* \"#utility.yul\":7361:8073   */\n  jump(tag_165)\ntag_167:\n    /* \"#utility.yul\":7231:8079   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8085:9158   */\ntag_77:\n    /* \"#utility.yul\":8139:8144   */\n  0x00\n    /* \"#utility.yul\":8330:8338   */\n  dup3\n    /* \"#utility.yul\":8320:8360   */\n  tag_173\n  jumpi\n    /* \"#utility.yul\":8351:8352   */\n  0x01\n    /* \"#utility.yul\":8342:8352   */\n  swap1\n  pop\n    /* \"#utility.yul\":8353:8358   */\n  jump(tag_172)\n    /* \"#utility.yul\":8320:8360   */\ntag_173:\n    /* \"#utility.yul\":8379:8383   */\n  dup2\n    /* \"#utility.yul\":8369:8405   */\n  tag_174\n  jumpi\n    /* \"#utility.yul\":8396:8397   */\n  0x00\n    /* \"#utility.yul\":8387:8397   */\n  swap1\n  pop\n    /* \"#utility.yul\":8398:8403   */\n  jump(tag_172)\n    /* \"#utility.yul\":8369:8405   */\ntag_174:\n    /* \"#utility.yul\":8465:8469   */\n  dup2\n    /* \"#utility.yul\":8513:8514   */\n  0x01\n    /* \"#utility.yul\":8508:8535   */\n  dup2\n  eq\n  tag_176\n  jumpi\n    /* \"#utility.yul\":8549:8550   */\n  0x02\n    /* \"#utility.yul\":8544:8735   */\n  dup2\n  eq\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8458:8735   */\n  jump(tag_175)\n    /* \"#utility.yul\":8508:8535   */\ntag_176:\n    /* \"#utility.yul\":8526:8527   */\n  0x01\n    /* \"#utility.yul\":8517:8527   */\n  swap2\n  pop\n    /* \"#utility.yul\":8528:8533   */\n  pop\n  jump(tag_172)\n    /* \"#utility.yul\":8544:8735   */\ntag_177:\n    /* \"#utility.yul\":8589:8592   */\n  0xff\n    /* \"#utility.yul\":8579:8587   */\n  dup5\n    /* \"#utility.yul\":8576:8593   */\n  gt\n    /* \"#utility.yul\":8573:8616   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8596:8614   */\n  tag_179\n  tag_74\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8573:8616   */\ntag_178:\n    /* \"#utility.yul\":8645:8653   */\n  dup4\n    /* \"#utility.yul\":8642:8643   */\n  0x02\n    /* \"#utility.yul\":8638:8654   */\n  exp\n    /* \"#utility.yul\":8629:8654   */\n  swap2\n  pop\n    /* \"#utility.yul\":8680:8683   */\n  dup5\n    /* \"#utility.yul\":8673:8678   */\n  dup3\n    /* \"#utility.yul\":8670:8684   */\n  gt\n    /* \"#utility.yul\":8667:8707   */\n  iszero\n  tag_180\n  jumpi\n    /* \"#utility.yul\":8687:8705   */\n  tag_181\n  tag_74\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8667:8707   */\ntag_180:\n    /* \"#utility.yul\":8720:8725   */\n  pop\n  jump(tag_172)\n    /* \"#utility.yul\":8458:8735   */\ntag_175:\n  pop\n    /* \"#utility.yul\":8844:8846   */\n  0x20\n    /* \"#utility.yul\":8834:8842   */\n  dup4\n    /* \"#utility.yul\":8831:8847   */\n  lt\n    /* \"#utility.yul\":8825:8828   */\n  0x0133\n    /* \"#utility.yul\":8819:8823   */\n  dup4\n    /* \"#utility.yul\":8816:8829   */\n  lt\n    /* \"#utility.yul\":8812:8848   */\n  and\n    /* \"#utility.yul\":8794:8796   */\n  0x4e\n    /* \"#utility.yul\":8784:8792   */\n  dup5\n    /* \"#utility.yul\":8781:8797   */\n  lt\n    /* \"#utility.yul\":8776:8778   */\n  0x0b\n    /* \"#utility.yul\":8770:8774   */\n  dup5\n    /* \"#utility.yul\":8767:8779   */\n  lt\n    /* \"#utility.yul\":8763:8798   */\n  and\n    /* \"#utility.yul\":8747:8858   */\n  or\n    /* \"#utility.yul\":8744:8990   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8900:8908   */\n  dup3\n    /* \"#utility.yul\":8894:8898   */\n  dup3\n    /* \"#utility.yul\":8890:8909   */\n  exp\n    /* \"#utility.yul\":8881:8909   */\n  swap1\n  pop\n    /* \"#utility.yul\":8935:8938   */\n  dup4\n    /* \"#utility.yul\":8928:8933   */\n  dup2\n    /* \"#utility.yul\":8925:8939   */\n  gt\n    /* \"#utility.yul\":8922:8962   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_184\n  tag_74\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8922:8962   */\ntag_183:\n    /* \"#utility.yul\":8975:8980   */\n  jump(tag_172)\n    /* \"#utility.yul\":8744:8990   */\ntag_182:\n    /* \"#utility.yul\":9015:9057   */\n  tag_185\n    /* \"#utility.yul\":9053:9056   */\n  dup5\n    /* \"#utility.yul\":9043:9051   */\n  dup5\n    /* \"#utility.yul\":9037:9041   */\n  dup5\n    /* \"#utility.yul\":9034:9035   */\n  0x01\n    /* \"#utility.yul\":9015:9057   */\n  tag_76\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9000:9057   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9089:9093   */\n  dup2\n    /* \"#utility.yul\":9084:9087   */\n  dup5\n    /* \"#utility.yul\":9080:9094   */\n  div\n    /* \"#utility.yul\":9073:9078   */\n  dup2\n    /* \"#utility.yul\":9070:9095   */\n  gt\n    /* \"#utility.yul\":9067:9118   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":9098:9116   */\n  tag_187\n  tag_74\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9067:9118   */\ntag_186:\n    /* \"#utility.yul\":9147:9151   */\n  dup2\n    /* \"#utility.yul\":9140:9145   */\n  dup2\n    /* \"#utility.yul\":9136:9152   */\n  mul\n    /* \"#utility.yul\":9127:9152   */\n  swap1\n  pop\n    /* \"#utility.yul\":8085:9158   */\ntag_172:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9164:9250   */\ntag_78:\n    /* \"#utility.yul\":9199:9206   */\n  0x00\n    /* \"#utility.yul\":9239:9243   */\n  0xff\n    /* \"#utility.yul\":9232:9237   */\n  dup3\n    /* \"#utility.yul\":9228:9244   */\n  and\n    /* \"#utility.yul\":9217:9244   */\n  swap1\n  pop\n    /* \"#utility.yul\":9164:9250   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9256:9537   */\ntag_22:\n    /* \"#utility.yul\":9314:9319   */\n  0x00\n    /* \"#utility.yul\":9338:9361   */\n  tag_190\n    /* \"#utility.yul\":9356:9360   */\n  dup3\n    /* \"#utility.yul\":9338:9361   */\n  tag_61\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9330:9361   */\n  swap2\n  pop\n    /* \"#utility.yul\":9382:9407   */\n  tag_191\n    /* \"#utility.yul\":9398:9406   */\n  dup4\n    /* \"#utility.yul\":9382:9407   */\n  tag_78\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9370:9407   */\n  swap3\n  pop\n    /* \"#utility.yul\":9426:9530   */\n  tag_192\n    /* \"#utility.yul\":9463:9529   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9453:9461   */\n  dup5\n    /* \"#utility.yul\":9447:9451   */\n  dup5\n    /* \"#utility.yul\":9426:9530   */\n  tag_77\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9417:9530   */\n  swap1\n  pop\n    /* \"#utility.yul\":9256:9537   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9543:9953   */\ntag_24:\n    /* \"#utility.yul\":9583:9590   */\n  0x00\n    /* \"#utility.yul\":9606:9626   */\n  tag_194\n    /* \"#utility.yul\":9624:9625   */\n  dup3\n    /* \"#utility.yul\":9606:9626   */\n  tag_61\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9601:9626   */\n  swap2\n  pop\n    /* \"#utility.yul\":9640:9660   */\n  tag_195\n    /* \"#utility.yul\":9658:9659   */\n  dup4\n    /* \"#utility.yul\":9640:9660   */\n  tag_61\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9635:9660   */\n  swap3\n  pop\n    /* \"#utility.yul\":9695:9696   */\n  dup3\n    /* \"#utility.yul\":9692:9693   */\n  dup3\n    /* \"#utility.yul\":9688:9697   */\n  mul\n    /* \"#utility.yul\":9717:9747   */\n  tag_196\n    /* \"#utility.yul\":9735:9746   */\n  dup2\n    /* \"#utility.yul\":9717:9747   */\n  tag_61\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9706:9747   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9897   */\n  dup3\n    /* \"#utility.yul\":9887:9894   */\n  dup3\n    /* \"#utility.yul\":9883:9898   */\n  div\n    /* \"#utility.yul\":9880:9881   */\n  dup5\n    /* \"#utility.yul\":9877:9899   */\n  eq\n    /* \"#utility.yul\":9857:9858   */\n  dup4\n    /* \"#utility.yul\":9850:9859   */\n  iszero\n    /* \"#utility.yul\":9830:9913   */\n  or\n    /* \"#utility.yul\":9807:9946   */\n  tag_197\n  jumpi\n    /* \"#utility.yul\":9926:9944   */\n  tag_198\n  tag_74\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9807:9946   */\ntag_197:\n    /* \"#utility.yul\":9591:9953   */\n  pop\n    /* \"#utility.yul\":9543:9953   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9959:10150   */\ntag_37:\n    /* \"#utility.yul\":9999:10002   */\n  0x00\n    /* \"#utility.yul\":10018:10038   */\n  tag_200\n    /* \"#utility.yul\":10036:10037   */\n  dup3\n    /* \"#utility.yul\":10018:10038   */\n  tag_61\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":10013:10038   */\n  swap2\n  pop\n    /* \"#utility.yul\":10052:10072   */\n  tag_201\n    /* \"#utility.yul\":10070:10071   */\n  dup4\n    /* \"#utility.yul\":10052:10072   */\n  tag_61\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10047:10072   */\n  swap3\n  pop\n    /* \"#utility.yul\":10095:10096   */\n  dup3\n    /* \"#utility.yul\":10092:10093   */\n  dup3\n    /* \"#utility.yul\":10088:10097   */\n  add\n    /* \"#utility.yul\":10081:10097   */\n  swap1\n  pop\n    /* \"#utility.yul\":10116:10119   */\n  dup1\n    /* \"#utility.yul\":10113:10114   */\n  dup3\n    /* \"#utility.yul\":10110:10120   */\n  gt\n    /* \"#utility.yul\":10107:10143   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":10123:10141   */\n  tag_203\n  tag_74\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10107:10143   */\ntag_202:\n    /* \"#utility.yul\":9959:10150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10156:10274   */\ntag_79:\n    /* \"#utility.yul\":10243:10267   */\n  tag_205\n    /* \"#utility.yul\":10261:10266   */\n  dup2\n    /* \"#utility.yul\":10243:10267   */\n  tag_61\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":10238:10241   */\n  dup3\n    /* \"#utility.yul\":10231:10268   */\n  mstore\n    /* \"#utility.yul\":10156:10274   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10280:10722   */\ntag_41:\n    /* \"#utility.yul\":10429:10433   */\n  0x00\n    /* \"#utility.yul\":10467:10469   */\n  0x60\n    /* \"#utility.yul\":10456:10465   */\n  dup3\n    /* \"#utility.yul\":10452:10470   */\n  add\n    /* \"#utility.yul\":10444:10470   */\n  swap1\n  pop\n    /* \"#utility.yul\":10480:10551   */\n  tag_207\n    /* \"#utility.yul\":10548:10549   */\n  0x00\n    /* \"#utility.yul\":10537:10546   */\n  dup4\n    /* \"#utility.yul\":10533:10550   */\n  add\n    /* \"#utility.yul\":10524:10530   */\n  dup7\n    /* \"#utility.yul\":10480:10551   */\n  tag_73\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10561:10633   */\n  tag_208\n    /* \"#utility.yul\":10629:10631   */\n  0x20\n    /* \"#utility.yul\":10618:10627   */\n  dup4\n    /* \"#utility.yul\":10614:10632   */\n  add\n    /* \"#utility.yul\":10605:10611   */\n  dup6\n    /* \"#utility.yul\":10561:10633   */\n  tag_79\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10643:10715   */\n  tag_209\n    /* \"#utility.yul\":10711:10713   */\n  0x40\n    /* \"#utility.yul\":10700:10709   */\n  dup4\n    /* \"#utility.yul\":10696:10714   */\n  add\n    /* \"#utility.yul\":10687:10693   */\n  dup5\n    /* \"#utility.yul\":10643:10715   */\n  tag_79\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10280:10722   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10728:10950   */\ntag_45:\n    /* \"#utility.yul\":10821:10825   */\n  0x00\n    /* \"#utility.yul\":10859:10861   */\n  0x20\n    /* \"#utility.yul\":10848:10857   */\n  dup3\n    /* \"#utility.yul\":10844:10862   */\n  add\n    /* \"#utility.yul\":10836:10862   */\n  swap1\n  pop\n    /* \"#utility.yul\":10872:10943   */\n  tag_211\n    /* \"#utility.yul\":10940:10941   */\n  0x00\n    /* \"#utility.yul\":10929:10938   */\n  dup4\n    /* \"#utility.yul\":10925:10942   */\n  add\n    /* \"#utility.yul\":10916:10922   */\n  dup5\n    /* \"#utility.yul\":10872:10943   */\n  tag_79\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10728:10950   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/chemistToken.sol\":264:604  contract ChemistToken is ERC20, Ownable {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/chemistToken.sol\":264:604  contract ChemistToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/chemistToken.sol\":506:601  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_73\n      swap1\n      tag_72\n      jump\t// in\n    tag_73:\n      dup1\n      iszero\n      tag_74\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_75\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_74)\n    tag_75:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_76:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_76\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_78\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_80\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_81\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_80:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_85\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_86\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_87\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/chemistToken.sol\":506:601  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"contracts/chemistToken.sol\":576:593  _mint(to, amount) */\n      tag_94\n        /* \"contracts/chemistToken.sol\":582:584  to */\n      dup3\n        /* \"contracts/chemistToken.sol\":586:592  amount */\n      dup3\n        /* \"contracts/chemistToken.sol\":576:581  _mint */\n      tag_95\n        /* \"contracts/chemistToken.sol\":576:593  _mint(to, amount) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/chemistToken.sol\":506:601  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_98\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_100\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_101\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_72\n      jump\t// in\n    tag_104:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_72\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_111\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_88\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_114\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_118\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_101\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts@5.3.0/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.3.0/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_81:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_121\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_86:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_124\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_65\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_129\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_122\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_88:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_133\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_135\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_136\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_138\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1855:1862  owner() */\n      tag_139\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1855:1860  owner */\n      tag_52\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_79\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_95:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_146\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_136\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_136:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_159)\n    tag_156:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_163)\n    tag_162:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_165:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_166:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_167:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_168:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_169:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_194\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_165\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":711:782   */\n      tag_195\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_166\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_196\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_167\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":881:910   */\n      tag_197\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_168\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_21:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_199\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_169\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_171:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_173:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_174:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_205\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_173\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_175:\n        /* \"#utility.yul\":1876:1900   */\n      tag_207\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_174\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_208:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_176:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_210\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_175\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_177:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_178:\n        /* \"#utility.yul\":2232:2256   */\n      tag_213\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_177\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_214:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_179:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_216\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_178\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_24:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_219\n      tag_171\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2525:2644   */\n    tag_218:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_220\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_176\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_221\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_179\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_180:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_181:\n        /* \"#utility.yul\":3089:3110   */\n      tag_224\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_180\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_27:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_226\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_181\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_182:\n        /* \"#utility.yul\":3426:3450   */\n      tag_228\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_177\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_31:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_230\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_182\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_34:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_233\n      tag_171\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3801:3920   */\n    tag_232:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_234\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_176\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_235\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_176\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_236\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_179\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_183:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_184:\n        /* \"#utility.yul\":4491:4513   */\n      tag_239\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_183\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_40:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_241\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_184\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_46:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_244\n      tag_171\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4822:4941   */\n    tag_243:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_245\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_176\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_185:\n        /* \"#utility.yul\":5168:5192   */\n      tag_247\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_174\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_54:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_249\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_185\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_64:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_251\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_252\n      tag_171\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":5526:5645   */\n    tag_251:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_253\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_176\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_254\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_176\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_186:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_72:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_257:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_259\n      tag_186\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":6329:6413   */\n    tag_258:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6867   */\n    tag_128:\n        /* \"#utility.yul\":6574:6578   */\n      0x00\n        /* \"#utility.yul\":6612:6614   */\n      0x60\n        /* \"#utility.yul\":6601:6610   */\n      dup3\n        /* \"#utility.yul\":6597:6615   */\n      add\n        /* \"#utility.yul\":6589:6615   */\n      swap1\n      pop\n        /* \"#utility.yul\":6625:6696   */\n      tag_261\n        /* \"#utility.yul\":6693:6694   */\n      0x00\n        /* \"#utility.yul\":6682:6691   */\n      dup4\n        /* \"#utility.yul\":6678:6695   */\n      add\n        /* \"#utility.yul\":6669:6675   */\n      dup7\n        /* \"#utility.yul\":6625:6696   */\n      tag_185\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6706:6778   */\n      tag_262\n        /* \"#utility.yul\":6774:6776   */\n      0x20\n        /* \"#utility.yul\":6763:6772   */\n      dup4\n        /* \"#utility.yul\":6759:6777   */\n      add\n        /* \"#utility.yul\":6750:6756   */\n      dup6\n        /* \"#utility.yul\":6706:6778   */\n      tag_182\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":6788:6860   */\n      tag_263\n        /* \"#utility.yul\":6856:6858   */\n      0x40\n        /* \"#utility.yul\":6845:6854   */\n      dup4\n        /* \"#utility.yul\":6841:6859   */\n      add\n        /* \"#utility.yul\":6832:6838   */\n      dup5\n        /* \"#utility.yul\":6788:6860   */\n      tag_182\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6425:6867   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:7053   */\n    tag_187:\n        /* \"#utility.yul\":6921:6998   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6918:6919   */\n      0x00\n        /* \"#utility.yul\":6911:6999   */\n      mstore\n        /* \"#utility.yul\":7018:7022   */\n      0x11\n        /* \"#utility.yul\":7015:7016   */\n      0x04\n        /* \"#utility.yul\":7008:7023   */\n      mstore\n        /* \"#utility.yul\":7042:7046   */\n      0x24\n        /* \"#utility.yul\":7039:7040   */\n      0x00\n        /* \"#utility.yul\":7032:7047   */\n      revert\n        /* \"#utility.yul\":7059:7250   */\n    tag_158:\n        /* \"#utility.yul\":7099:7102   */\n      0x00\n        /* \"#utility.yul\":7118:7138   */\n      tag_266\n        /* \"#utility.yul\":7136:7137   */\n      dup3\n        /* \"#utility.yul\":7118:7138   */\n      tag_177\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7113:7138   */\n      swap2\n      pop\n        /* \"#utility.yul\":7152:7172   */\n      tag_267\n        /* \"#utility.yul\":7170:7171   */\n      dup4\n        /* \"#utility.yul\":7152:7172   */\n      tag_177\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7147:7172   */\n      swap3\n      pop\n        /* \"#utility.yul\":7195:7196   */\n      dup3\n        /* \"#utility.yul\":7192:7193   */\n      dup3\n        /* \"#utility.yul\":7188:7197   */\n      add\n        /* \"#utility.yul\":7181:7197   */\n      swap1\n      pop\n        /* \"#utility.yul\":7216:7219   */\n      dup1\n        /* \"#utility.yul\":7213:7214   */\n      dup3\n        /* \"#utility.yul\":7210:7220   */\n      gt\n        /* \"#utility.yul\":7207:7243   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":7223:7241   */\n      tag_269\n      tag_187\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7207:7243   */\n    tag_268:\n        /* \"#utility.yul\":7059:7250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220445fc5cf21706ab1dfe4bf3a6bfabc86d421bbd15d8316477b210d704dbfca5f64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_968": {
									"entryPoint": null,
									"id": 968,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 583,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 380,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 716,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 575,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2791,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2283,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2365,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1842,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10953:7",
										"nodeType": "YulBlock",
										"src": "0:10953:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "939:413:7",
													"nodeType": "YulBlock",
													"src": "939:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:7",
																"nodeType": "YulBlock",
																"src": "985:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:7"
																			},
																			"nativeSrc": "987:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:7"
																		},
																		"nativeSrc": "987:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:7"
																		},
																		"nativeSrc": "956:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "981:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:7"
																},
																"nativeSrc": "952:32:7",
																"nodeType": "YulFunctionCall",
																"src": "952:32:7"
															},
															"nativeSrc": "949:119:7",
															"nodeType": "YulIf",
															"src": "949:119:7"
														},
														{
															"nativeSrc": "1078:128:7",
															"nodeType": "YulBlock",
															"src": "1078:128:7",
															"statements": [
																{
																	"nativeSrc": "1093:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:7"
																				},
																				"nativeSrc": "1164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:7"
																		},
																		"nativeSrc": "1132:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:7",
															"nodeType": "YulBlock",
															"src": "1216:129:7",
															"statements": [
																{
																	"nativeSrc": "1231:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:7"
																				},
																				"nativeSrc": "1303:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:7"
																		},
																		"nativeSrc": "1271:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:7",
														"nodeType": "YulTypedName",
														"src": "901:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:7",
														"nodeType": "YulTypedName",
														"src": "912:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:7",
														"nodeType": "YulTypedName",
														"src": "924:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:7",
														"nodeType": "YulTypedName",
														"src": "932:6:7",
														"type": ""
													}
												],
												"src": "845:507:7"
											},
											{
												"body": {
													"nativeSrc": "1417:40:7",
													"nodeType": "YulBlock",
													"src": "1417:40:7",
													"statements": [
														{
															"nativeSrc": "1428:22:7",
															"nodeType": "YulAssignment",
															"src": "1428:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:7"
																},
																"nativeSrc": "1438:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:7",
														"nodeType": "YulTypedName",
														"src": "1400:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:7",
														"nodeType": "YulTypedName",
														"src": "1410:6:7",
														"type": ""
													}
												],
												"src": "1358:99:7"
											},
											{
												"body": {
													"nativeSrc": "1491:152:7",
													"nodeType": "YulBlock",
													"src": "1491:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:7"
																},
																"nativeSrc": "1501:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:7"
															},
															"nativeSrc": "1501:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:7"
																},
																"nativeSrc": "1598:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:7"
															},
															"nativeSrc": "1598:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:7"
																},
																"nativeSrc": "1622:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:7"
															},
															"nativeSrc": "1622:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:7"
											},
											{
												"body": {
													"nativeSrc": "1677:152:7",
													"nodeType": "YulBlock",
													"src": "1677:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:7"
																},
																"nativeSrc": "1687:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:7"
															},
															"nativeSrc": "1687:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:7"
																},
																"nativeSrc": "1784:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:7"
															},
															"nativeSrc": "1784:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:7"
																},
																"nativeSrc": "1808:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:7"
															},
															"nativeSrc": "1808:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:7"
											},
											{
												"body": {
													"nativeSrc": "1886:269:7",
													"nodeType": "YulBlock",
													"src": "1886:269:7",
													"statements": [
														{
															"nativeSrc": "1896:22:7",
															"nodeType": "YulAssignment",
															"src": "1896:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:7"
																},
																"nativeSrc": "1906:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:7"
																}
															]
														},
														{
															"nativeSrc": "1927:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:7"
																},
																"nativeSrc": "1953:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:7",
																"nodeType": "YulBlock",
																"src": "2004:51:7",
																"statements": [
																	{
																		"nativeSrc": "2018:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:7"
																			},
																			"nativeSrc": "2028:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:7"
																},
																"nativeSrc": "1977:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:7"
															},
															"nativeSrc": "1974:81:7",
															"nodeType": "YulIf",
															"src": "1974:81:7"
														},
														{
															"body": {
																"nativeSrc": "2107:42:7",
																"nodeType": "YulBlock",
																"src": "2107:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:7"
																			},
																			"nativeSrc": "2121:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:7"
																		},
																		"nativeSrc": "2121:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:7"
																		},
																		"nativeSrc": "2091:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:7"
																},
																"nativeSrc": "2068:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:7"
															},
															"nativeSrc": "2065:84:7",
															"nodeType": "YulIf",
															"src": "2065:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:7",
														"nodeType": "YulTypedName",
														"src": "1870:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:7",
														"nodeType": "YulTypedName",
														"src": "1879:6:7",
														"type": ""
													}
												],
												"src": "1835:320:7"
											},
											{
												"body": {
													"nativeSrc": "2215:87:7",
													"nodeType": "YulBlock",
													"src": "2215:87:7",
													"statements": [
														{
															"nativeSrc": "2225:11:7",
															"nodeType": "YulAssignment",
															"src": "2225:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:7",
																"nodeType": "YulIdentifier",
																"src": "2233:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:7"
																},
																"nativeSrc": "2246:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:7"
															},
															"nativeSrc": "2246:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:7"
														},
														{
															"nativeSrc": "2269:26:7",
															"nodeType": "YulAssignment",
															"src": "2269:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:7"
																},
																"nativeSrc": "2277:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:7",
														"nodeType": "YulTypedName",
														"src": "2202:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:7",
														"nodeType": "YulTypedName",
														"src": "2210:4:7",
														"type": ""
													}
												],
												"src": "2161:141:7"
											},
											{
												"body": {
													"nativeSrc": "2352:49:7",
													"nodeType": "YulBlock",
													"src": "2352:49:7",
													"statements": [
														{
															"nativeSrc": "2362:33:7",
															"nodeType": "YulAssignment",
															"src": "2362:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:7"
																		},
																		"nativeSrc": "2376:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:7"
																},
																"nativeSrc": "2372:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:7",
														"nodeType": "YulTypedName",
														"src": "2335:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2308:93:7"
											},
											{
												"body": {
													"nativeSrc": "2460:54:7",
													"nodeType": "YulBlock",
													"src": "2460:54:7",
													"statements": [
														{
															"nativeSrc": "2470:37:7",
															"nodeType": "YulAssignment",
															"src": "2470:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:7"
																},
																"nativeSrc": "2491:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:7",
														"nodeType": "YulTypedName",
														"src": "2435:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:7",
														"nodeType": "YulTypedName",
														"src": "2441:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:7",
														"nodeType": "YulTypedName",
														"src": "2451:8:7",
														"type": ""
													}
												],
												"src": "2407:107:7"
											},
											{
												"body": {
													"nativeSrc": "2596:317:7",
													"nodeType": "YulBlock",
													"src": "2596:317:7",
													"statements": [
														{
															"nativeSrc": "2606:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:7"
																},
																"nativeSrc": "2623:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:7"
																},
																"nativeSrc": "2662:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:7",
															"nodeType": "YulAssignment",
															"src": "2768:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:7"
																},
																"nativeSrc": "2780:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:7"
																}
															]
														},
														{
															"nativeSrc": "2828:30:7",
															"nodeType": "YulAssignment",
															"src": "2828:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:7"
																		},
																		"nativeSrc": "2848:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:7"
																},
																"nativeSrc": "2837:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:7"
																}
															]
														},
														{
															"nativeSrc": "2867:40:7",
															"nodeType": "YulAssignment",
															"src": "2867:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:7"
																		},
																		"nativeSrc": "2887:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:7"
																},
																"nativeSrc": "2877:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:7",
														"nodeType": "YulTypedName",
														"src": "2557:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:7",
														"nodeType": "YulTypedName",
														"src": "2564:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:7",
														"nodeType": "YulTypedName",
														"src": "2576:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:7",
														"nodeType": "YulTypedName",
														"src": "2589:6:7",
														"type": ""
													}
												],
												"src": "2520:393:7"
											},
											{
												"body": {
													"nativeSrc": "2964:32:7",
													"nodeType": "YulBlock",
													"src": "2964:32:7",
													"statements": [
														{
															"nativeSrc": "2974:16:7",
															"nodeType": "YulAssignment",
															"src": "2974:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:7",
																"nodeType": "YulIdentifier",
																"src": "2985:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:7",
														"nodeType": "YulTypedName",
														"src": "2946:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:7",
														"nodeType": "YulTypedName",
														"src": "2956:7:7",
														"type": ""
													}
												],
												"src": "2919:77:7"
											},
											{
												"body": {
													"nativeSrc": "3034:28:7",
													"nodeType": "YulBlock",
													"src": "3034:28:7",
													"statements": [
														{
															"nativeSrc": "3044:12:7",
															"nodeType": "YulAssignment",
															"src": "3044:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:7",
																"nodeType": "YulIdentifier",
																"src": "3051:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:7",
														"nodeType": "YulTypedName",
														"src": "3020:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:7",
														"nodeType": "YulTypedName",
														"src": "3030:3:7",
														"type": ""
													}
												],
												"src": "3002:60:7"
											},
											{
												"body": {
													"nativeSrc": "3128:82:7",
													"nodeType": "YulBlock",
													"src": "3128:82:7",
													"statements": [
														{
															"nativeSrc": "3138:66:7",
															"nodeType": "YulAssignment",
															"src": "3138:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:7"
																				},
																				"nativeSrc": "3178:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:7"
																		},
																		"nativeSrc": "3169:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:7"
																},
																"nativeSrc": "3151:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:7",
														"nodeType": "YulTypedName",
														"src": "3108:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:7",
														"nodeType": "YulTypedName",
														"src": "3118:9:7",
														"type": ""
													}
												],
												"src": "3068:142:7"
											},
											{
												"body": {
													"nativeSrc": "3263:28:7",
													"nodeType": "YulBlock",
													"src": "3263:28:7",
													"statements": [
														{
															"nativeSrc": "3273:12:7",
															"nodeType": "YulAssignment",
															"src": "3273:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:7",
																"nodeType": "YulIdentifier",
																"src": "3280:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:7",
														"nodeType": "YulTypedName",
														"src": "3249:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:7",
														"nodeType": "YulTypedName",
														"src": "3259:3:7",
														"type": ""
													}
												],
												"src": "3216:75:7"
											},
											{
												"body": {
													"nativeSrc": "3373:193:7",
													"nodeType": "YulBlock",
													"src": "3373:193:7",
													"statements": [
														{
															"nativeSrc": "3383:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:7"
																},
																"nativeSrc": "3407:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:7"
																				},
																				"nativeSrc": "3496:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:7"
																				},
																				"nativeSrc": "3517:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:7"
																		},
																		"nativeSrc": "3468:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:7"
																},
																"nativeSrc": "3455:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:7"
															},
															"nativeSrc": "3455:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:7",
														"nodeType": "YulTypedName",
														"src": "3350:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:7",
														"nodeType": "YulTypedName",
														"src": "3356:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:7",
														"nodeType": "YulTypedName",
														"src": "3364:7:7",
														"type": ""
													}
												],
												"src": "3297:269:7"
											},
											{
												"body": {
													"nativeSrc": "3621:24:7",
													"nodeType": "YulBlock",
													"src": "3621:24:7",
													"statements": [
														{
															"nativeSrc": "3631:8:7",
															"nodeType": "YulAssignment",
															"src": "3631:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:7",
																"nodeType": "YulLiteral",
																"src": "3638:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:7",
														"nodeType": "YulTypedName",
														"src": "3617:3:7",
														"type": ""
													}
												],
												"src": "3572:73:7"
											},
											{
												"body": {
													"nativeSrc": "3704:136:7",
													"nodeType": "YulBlock",
													"src": "3704:136:7",
													"statements": [
														{
															"nativeSrc": "3714:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:7"
																},
																"nativeSrc": "3728:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:7"
																},
																"nativeSrc": "3769:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:7"
															},
															"nativeSrc": "3769:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:7",
														"nodeType": "YulTypedName",
														"src": "3690:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:7",
														"nodeType": "YulTypedName",
														"src": "3696:6:7",
														"type": ""
													}
												],
												"src": "3651:189:7"
											},
											{
												"body": {
													"nativeSrc": "3896:136:7",
													"nodeType": "YulBlock",
													"src": "3896:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:7",
																"nodeType": "YulBlock",
																"src": "3963:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:7"
																			},
																			"nativeSrc": "3977:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:7"
																		},
																		"nativeSrc": "3977:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:7"
																},
																"nativeSrc": "3913:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:7"
															},
															"nativeSrc": "3906:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:7",
																"nodeType": "YulBlock",
																"src": "3928:26:7",
																"statements": [
																	{
																		"nativeSrc": "3930:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:7"
																			},
																			"nativeSrc": "3939:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:7",
																"nodeType": "YulBlock",
																"src": "3910:2:7",
																"statements": []
															},
															"src": "3906:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:7",
														"nodeType": "YulTypedName",
														"src": "3884:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:7",
														"nodeType": "YulTypedName",
														"src": "3891:3:7",
														"type": ""
													}
												],
												"src": "3846:186:7"
											},
											{
												"body": {
													"nativeSrc": "4117:464:7",
													"nodeType": "YulBlock",
													"src": "4117:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:7",
																"nodeType": "YulBlock",
																"src": "4143:431:7",
																"statements": [
																	{
																		"nativeSrc": "4157:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:7"
																			},
																			"nativeSrc": "4173:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:7"
																					},
																					"nativeSrc": "4257:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:7"
																			},
																			"nativeSrc": "4243:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:7",
																			"nodeType": "YulBlock",
																			"src": "4444:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:7"
																			},
																			"nativeSrc": "4425:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:7"
																		},
																		"nativeSrc": "4422:49:7",
																		"nodeType": "YulIf",
																		"src": "4422:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:7"
																							},
																							"nativeSrc": "4540:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:7"
																					},
																					"nativeSrc": "4526:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:7"
																			},
																			"nativeSrc": "4484:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:7"
																		},
																		"nativeSrc": "4484:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:7"
																},
																"nativeSrc": "4131:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:7"
															},
															"nativeSrc": "4128:446:7",
															"nodeType": "YulIf",
															"src": "4128:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:7",
														"nodeType": "YulTypedName",
														"src": "4093:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:7",
														"nodeType": "YulTypedName",
														"src": "4100:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:7",
														"nodeType": "YulTypedName",
														"src": "4105:10:7",
														"type": ""
													}
												],
												"src": "4038:543:7"
											},
											{
												"body": {
													"nativeSrc": "4650:54:7",
													"nodeType": "YulBlock",
													"src": "4650:54:7",
													"statements": [
														{
															"nativeSrc": "4660:37:7",
															"nodeType": "YulAssignment",
															"src": "4660:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:7"
																},
																"nativeSrc": "4681:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:7",
														"nodeType": "YulTypedName",
														"src": "4625:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:7",
														"nodeType": "YulTypedName",
														"src": "4631:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:7",
														"nodeType": "YulTypedName",
														"src": "4641:8:7",
														"type": ""
													}
												],
												"src": "4587:117:7"
											},
											{
												"body": {
													"nativeSrc": "4761:118:7",
													"nodeType": "YulBlock",
													"src": "4761:118:7",
													"statements": [
														{
															"nativeSrc": "4771:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:7"
																				},
																				"nativeSrc": "4816:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:7"
																				},
																				"nativeSrc": "4831:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:7"
																		},
																		"nativeSrc": "4787:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:7"
																},
																"nativeSrc": "4783:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:7",
															"nodeType": "YulAssignment",
															"src": "4848:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:7"
																},
																"nativeSrc": "4858:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:7",
														"nodeType": "YulTypedName",
														"src": "4738:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:7",
														"nodeType": "YulTypedName",
														"src": "4744:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:7",
														"nodeType": "YulTypedName",
														"src": "4754:6:7",
														"type": ""
													}
												],
												"src": "4710:169:7"
											},
											{
												"body": {
													"nativeSrc": "4965:214:7",
													"nodeType": "YulBlock",
													"src": "4965:214:7",
													"statements": [
														{
															"nativeSrc": "5098:37:7",
															"nodeType": "YulAssignment",
															"src": "5098:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:7"
																},
																"nativeSrc": "5106:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:7"
																}
															]
														},
														{
															"nativeSrc": "5144:29:7",
															"nodeType": "YulAssignment",
															"src": "5144:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:7"
																		},
																		"nativeSrc": "5161:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:7"
																},
																"nativeSrc": "5152:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:7",
														"nodeType": "YulTypedName",
														"src": "4946:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:7",
														"nodeType": "YulTypedName",
														"src": "4952:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:7",
														"nodeType": "YulTypedName",
														"src": "4960:4:7",
														"type": ""
													}
												],
												"src": "4884:295:7"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:7",
													"nodeType": "YulBlock",
													"src": "5276:1303:7",
													"statements": [
														{
															"nativeSrc": "5287:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:7"
																},
																"nativeSrc": "5301:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:7",
																"nodeType": "YulBlock",
																"src": "5423:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:7"
																			},
																			"nativeSrc": "5425:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:7"
																		},
																		"nativeSrc": "5425:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:7"
																},
																"nativeSrc": "5392:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:7"
															},
															"nativeSrc": "5389:56:7",
															"nodeType": "YulIf",
															"src": "5389:56:7"
														},
														{
															"nativeSrc": "5455:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:7"
																		},
																		"nativeSrc": "5495:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:7"
																},
																"nativeSrc": "5469:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:7"
																},
																"nativeSrc": "5554:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:7"
															},
															"nativeSrc": "5554:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:7"
														},
														{
															"nativeSrc": "5631:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:7",
																"nodeType": "YulLiteral",
																"src": "5648:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:7",
															"nodeType": "YulAssignment",
															"src": "5659:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:7",
																"nodeType": "YulLiteral",
																"src": "5672:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:7",
																		"nodeType": "YulBlock",
																		"src": "5723:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:7"
																							},
																							"nativeSrc": "5764:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:7"
																					},
																					"nativeSrc": "5752:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:7"
																					},
																					"nativeSrc": "5802:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:7",
																					"nodeType": "YulBlock",
																					"src": "5920:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:7"
																												},
																												"nativeSrc": "5959:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:7"
																										},
																										"nativeSrc": "5953:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:7"
																								},
																								"nativeSrc": "5938:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:7"
																							},
																							"nativeSrc": "5938:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:7"
																						},
																						{
																							"nativeSrc": "5997:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:7"
																								},
																								"nativeSrc": "6007:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:7"
																								},
																								"nativeSrc": "6051:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:7"
																					},
																					"nativeSrc": "5883:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:7"
																				},
																				"nativeSrc": "5875:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:7",
																					"nodeType": "YulBlock",
																					"src": "5898:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:7"
																								},
																								"nativeSrc": "5905:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:7",
																					"nodeType": "YulBlock",
																					"src": "5879:3:7",
																					"statements": []
																				},
																				"src": "5875:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:7",
																					"nodeType": "YulBlock",
																					"src": "6119:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:7"
																										},
																										"nativeSrc": "6160:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:7"
																								},
																								"nativeSrc": "6154:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:7"
																												},
																												"nativeSrc": "6242:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:7"
																										},
																										"nativeSrc": "6212:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:7"
																								},
																								"nativeSrc": "6197:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:7"
																							},
																							"nativeSrc": "6197:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:7"
																					},
																					"nativeSrc": "6099:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:7"
																				},
																				"nativeSrc": "6096:179:7",
																				"nodeType": "YulIf",
																				"src": "6096:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:7"
																									},
																									"nativeSrc": "6305:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:7"
																							},
																							"nativeSrc": "6301:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:7"
																					},
																					"nativeSrc": "6288:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:7"
																				},
																				"nativeSrc": "6288:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:7",
																	"nodeType": "YulCase",
																	"src": "5716:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:7",
																		"nodeType": "YulBlock",
																		"src": "6351:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:7",
																					"nodeType": "YulBlock",
																					"src": "6402:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:7"
																										},
																										"nativeSrc": "6435:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:7"
																								},
																								"nativeSrc": "6429:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:7"
																				},
																				"nativeSrc": "6392:77:7",
																				"nodeType": "YulIf",
																				"src": "6392:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:7"
																							},
																							"nativeSrc": "6495:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:7"
																					},
																					"nativeSrc": "6482:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:7"
																				},
																				"nativeSrc": "6482:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:7",
																	"nodeType": "YulCase",
																	"src": "6343:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:7"
																},
																"nativeSrc": "5693:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:7"
															},
															"nativeSrc": "5686:887:7",
															"nodeType": "YulSwitch",
															"src": "5686:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:7",
														"nodeType": "YulTypedName",
														"src": "5265:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:7",
														"nodeType": "YulTypedName",
														"src": "5271:3:7",
														"type": ""
													}
												],
												"src": "5184:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6650:53:7",
													"nodeType": "YulBlock",
													"src": "6650:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6667:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6690:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6672:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6672:17:7"
																		},
																		"nativeSrc": "6672:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:7"
																},
																"nativeSrc": "6660:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6660:37:7"
															},
															"nativeSrc": "6660:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6660:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6585:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6638:5:7",
														"nodeType": "YulTypedName",
														"src": "6638:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6645:3:7",
														"nodeType": "YulTypedName",
														"src": "6645:3:7",
														"type": ""
													}
												],
												"src": "6585:118:7"
											},
											{
												"body": {
													"nativeSrc": "6807:124:7",
													"nodeType": "YulBlock",
													"src": "6807:124:7",
													"statements": [
														{
															"nativeSrc": "6817:26:7",
															"nodeType": "YulAssignment",
															"src": "6817:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6829:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6840:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:7"
																},
																"nativeSrc": "6825:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6825:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6897:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6897:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6910:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6921:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6921:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:7"
																		},
																		"nativeSrc": "6906:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6853:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6853:43:7"
																},
																"nativeSrc": "6853:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6853:71:7"
															},
															"nativeSrc": "6853:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6853:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6709:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6779:9:7",
														"nodeType": "YulTypedName",
														"src": "6779:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6791:6:7",
														"nodeType": "YulTypedName",
														"src": "6791:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6802:4:7",
														"nodeType": "YulTypedName",
														"src": "6802:4:7",
														"type": ""
													}
												],
												"src": "6709:222:7"
											},
											{
												"body": {
													"nativeSrc": "6965:152:7",
													"nodeType": "YulBlock",
													"src": "6965:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6982:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6982:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6985:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6985:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:7"
																},
																"nativeSrc": "6975:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6975:88:7"
															},
															"nativeSrc": "6975:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6975:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7079:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7082:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7072:6:7"
																},
																"nativeSrc": "7072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7072:15:7"
															},
															"nativeSrc": "7072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7072:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7103:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7103:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7106:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7106:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7096:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7096:6:7"
																},
																"nativeSrc": "7096:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7096:15:7"
															},
															"nativeSrc": "7096:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7096:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6937:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:180:7"
											},
											{
												"body": {
													"nativeSrc": "7174:51:7",
													"nodeType": "YulBlock",
													"src": "7174:51:7",
													"statements": [
														{
															"nativeSrc": "7184:34:7",
															"nodeType": "YulAssignment",
															"src": "7184:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7209:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7209:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7212:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7212:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7205:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7205:3:7"
																},
																"nativeSrc": "7205:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7205:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7184:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7184:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "7123:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7155:5:7",
														"nodeType": "YulTypedName",
														"src": "7155:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7165:8:7",
														"nodeType": "YulTypedName",
														"src": "7165:8:7",
														"type": ""
													}
												],
												"src": "7123:102:7"
											},
											{
												"body": {
													"nativeSrc": "7304:775:7",
													"nodeType": "YulBlock",
													"src": "7304:775:7",
													"statements": [
														{
															"nativeSrc": "7314:15:7",
															"nodeType": "YulAssignment",
															"src": "7314:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "7323:6:7",
																"nodeType": "YulIdentifier",
																"src": "7323:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7314:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7314:5:7"
																}
															]
														},
														{
															"nativeSrc": "7338:14:7",
															"nodeType": "YulAssignment",
															"src": "7338:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "7347:5:7",
																"nodeType": "YulIdentifier",
																"src": "7347:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7338:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7338:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7396:677:7",
																"nodeType": "YulBlock",
																"src": "7396:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7484:22:7",
																			"nodeType": "YulBlock",
																			"src": "7484:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7486:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "7486:16:7"
																						},
																						"nativeSrc": "7486:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7486:18:7"
																					},
																					"nativeSrc": "7486:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "7486:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7462:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7462:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7472:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7472:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7477:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "7477:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7468:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7468:3:7"
																					},
																					"nativeSrc": "7468:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7468:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7459:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "7459:2:7"
																			},
																			"nativeSrc": "7459:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7459:24:7"
																		},
																		"nativeSrc": "7456:50:7",
																		"nodeType": "YulIf",
																		"src": "7456:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "7551:419:7",
																			"nodeType": "YulBlock",
																			"src": "7551:419:7",
																			"statements": [
																				{
																					"nativeSrc": "7931:25:7",
																					"nodeType": "YulAssignment",
																					"src": "7931:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7944:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "7944:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7951:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "7951:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7940:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7940:3:7"
																						},
																						"nativeSrc": "7940:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7940:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7931:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "7931:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7526:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "7526:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7536:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7536:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7522:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7522:3:7"
																			},
																			"nativeSrc": "7522:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7522:16:7"
																		},
																		"nativeSrc": "7519:451:7",
																		"nodeType": "YulIf",
																		"src": "7519:451:7"
																	},
																	{
																		"nativeSrc": "7983:23:7",
																		"nodeType": "YulAssignment",
																		"src": "7983:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7995:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "7995:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8001:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8001:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7991:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7991:3:7"
																			},
																			"nativeSrc": "7991:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7991:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7983:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7983:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8019:44:7",
																		"nodeType": "YulAssignment",
																		"src": "8019:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8054:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8054:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8031:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "8031:22:7"
																			},
																			"nativeSrc": "8031:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8031:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8019:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "8019:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7372:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7372:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7382:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7382:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7369:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7369:2:7"
																},
																"nativeSrc": "7369:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7369:15:7"
															},
															"nativeSrc": "7361:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7385:2:7",
																"nodeType": "YulBlock",
																"src": "7385:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7365:3:7",
																"nodeType": "YulBlock",
																"src": "7365:3:7",
																"statements": []
															},
															"src": "7361:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7231:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7259:6:7",
														"nodeType": "YulTypedName",
														"src": "7259:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7267:5:7",
														"nodeType": "YulTypedName",
														"src": "7267:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7274:8:7",
														"nodeType": "YulTypedName",
														"src": "7274:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7284:3:7",
														"nodeType": "YulTypedName",
														"src": "7284:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7292:5:7",
														"nodeType": "YulTypedName",
														"src": "7292:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7299:4:7",
														"nodeType": "YulTypedName",
														"src": "7299:4:7",
														"type": ""
													}
												],
												"src": "7231:848:7"
											},
											{
												"body": {
													"nativeSrc": "8145:1013:7",
													"nodeType": "YulBlock",
													"src": "8145:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8340:20:7",
																"nodeType": "YulBlock",
																"src": "8340:20:7",
																"statements": [
																	{
																		"nativeSrc": "8342:10:7",
																		"nodeType": "YulAssignment",
																		"src": "8342:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8351:1:7",
																			"nodeType": "YulLiteral",
																			"src": "8351:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8342:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8342:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8353:5:7",
																		"nodeType": "YulLeave",
																		"src": "8353:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8330:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8330:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8323:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8323:6:7"
																},
																"nativeSrc": "8323:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8323:16:7"
															},
															"nativeSrc": "8320:40:7",
															"nodeType": "YulIf",
															"src": "8320:40:7"
														},
														{
															"body": {
																"nativeSrc": "8385:20:7",
																"nodeType": "YulBlock",
																"src": "8385:20:7",
																"statements": [
																	{
																		"nativeSrc": "8387:10:7",
																		"nodeType": "YulAssignment",
																		"src": "8387:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8396:1:7",
																			"nodeType": "YulLiteral",
																			"src": "8396:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8387:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8387:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8398:5:7",
																		"nodeType": "YulLeave",
																		"src": "8398:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8379:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8379:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8372:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:7"
																},
																"nativeSrc": "8372:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8372:12:7"
															},
															"nativeSrc": "8369:36:7",
															"nodeType": "YulIf",
															"src": "8369:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8515:20:7",
																		"nodeType": "YulBlock",
																		"src": "8515:20:7",
																		"statements": [
																			{
																				"nativeSrc": "8517:10:7",
																				"nodeType": "YulAssignment",
																				"src": "8517:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8526:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8517:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8517:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8528:5:7",
																				"nodeType": "YulLeave",
																				"src": "8528:5:7"
																			}
																		]
																	},
																	"nativeSrc": "8508:27:7",
																	"nodeType": "YulCase",
																	"src": "8508:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8513:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8513:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8559:176:7",
																		"nodeType": "YulBlock",
																		"src": "8559:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8594:22:7",
																					"nodeType": "YulBlock",
																					"src": "8594:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8596:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8596:16:7"
																								},
																								"nativeSrc": "8596:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8596:18:7"
																							},
																							"nativeSrc": "8596:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8596:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8579:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8579:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8589:3:7",
																							"nodeType": "YulLiteral",
																							"src": "8589:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8576:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8576:2:7"
																					},
																					"nativeSrc": "8576:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8576:17:7"
																				},
																				"nativeSrc": "8573:43:7",
																				"nodeType": "YulIf",
																				"src": "8573:43:7"
																			},
																			{
																				"nativeSrc": "8629:25:7",
																				"nodeType": "YulAssignment",
																				"src": "8629:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8642:1:7",
																							"nodeType": "YulLiteral",
																							"src": "8642:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8645:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "8645:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8638:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8638:3:7"
																					},
																					"nativeSrc": "8638:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8638:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8629:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "8629:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8685:22:7",
																					"nodeType": "YulBlock",
																					"src": "8685:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8687:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "8687:16:7"
																								},
																								"nativeSrc": "8687:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8687:18:7"
																							},
																							"nativeSrc": "8687:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8687:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8673:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "8673:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8680:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8680:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8670:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8670:2:7"
																					},
																					"nativeSrc": "8670:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8670:14:7"
																				},
																				"nativeSrc": "8667:40:7",
																				"nodeType": "YulIf",
																				"src": "8667:40:7"
																			},
																			{
																				"nativeSrc": "8720:5:7",
																				"nodeType": "YulLeave",
																				"src": "8720:5:7"
																			}
																		]
																	},
																	"nativeSrc": "8544:191:7",
																	"nodeType": "YulCase",
																	"src": "8544:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8549:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8549:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8465:4:7",
																"nodeType": "YulIdentifier",
																"src": "8465:4:7"
															},
															"nativeSrc": "8458:277:7",
															"nodeType": "YulSwitch",
															"src": "8458:277:7"
														},
														{
															"body": {
																"nativeSrc": "8867:123:7",
																"nodeType": "YulBlock",
																"src": "8867:123:7",
																"statements": [
																	{
																		"nativeSrc": "8881:28:7",
																		"nodeType": "YulAssignment",
																		"src": "8881:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8894:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8894:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8900:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8900:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8890:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8890:3:7"
																			},
																			"nativeSrc": "8890:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8890:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8881:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8881:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8940:22:7",
																			"nodeType": "YulBlock",
																			"src": "8940:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8942:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "8942:16:7"
																						},
																						"nativeSrc": "8942:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8942:18:7"
																					},
																					"nativeSrc": "8942:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "8942:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8928:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "8928:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8935:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8935:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8925:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "8925:2:7"
																			},
																			"nativeSrc": "8925:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8925:14:7"
																		},
																		"nativeSrc": "8922:40:7",
																		"nodeType": "YulIf",
																		"src": "8922:40:7"
																	},
																	{
																		"nativeSrc": "8975:5:7",
																		"nodeType": "YulLeave",
																		"src": "8975:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8770:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8770:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8776:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8776:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8767:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8767:2:7"
																				},
																				"nativeSrc": "8767:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8767:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8784:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8784:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8794:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8794:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8781:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8781:2:7"
																				},
																				"nativeSrc": "8781:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8781:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8763:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8763:3:7"
																		},
																		"nativeSrc": "8763:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8763:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8819:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "8819:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8825:3:7",
																						"nodeType": "YulLiteral",
																						"src": "8825:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8816:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8816:2:7"
																				},
																				"nativeSrc": "8816:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8816:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8834:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "8834:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8844:2:7",
																						"nodeType": "YulLiteral",
																						"src": "8844:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8831:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8831:2:7"
																				},
																				"nativeSrc": "8831:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8831:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8812:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:7"
																		},
																		"nativeSrc": "8812:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8812:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8747:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8747:2:7"
																},
																"nativeSrc": "8747:111:7",
																"nodeType": "YulFunctionCall",
																"src": "8747:111:7"
															},
															"nativeSrc": "8744:246:7",
															"nodeType": "YulIf",
															"src": "8744:246:7"
														},
														{
															"nativeSrc": "9000:57:7",
															"nodeType": "YulAssignment",
															"src": "9000:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9034:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9034:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9037:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9037:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9043:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9043:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9053:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9053:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9015:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "9015:18:7"
																},
																"nativeSrc": "9015:42:7",
																"nodeType": "YulFunctionCall",
																"src": "9015:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9000:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9000:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "9007:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9007:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9096:22:7",
																"nodeType": "YulBlock",
																"src": "9096:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9098:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9098:16:7"
																			},
																			"nativeSrc": "9098:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9098:18:7"
																		},
																		"nativeSrc": "9098:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9098:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9073:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9073:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9084:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9084:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9089:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9089:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9080:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:7"
																		},
																		"nativeSrc": "9080:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9070:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9070:2:7"
																},
																"nativeSrc": "9070:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9070:25:7"
															},
															"nativeSrc": "9067:51:7",
															"nodeType": "YulIf",
															"src": "9067:51:7"
														},
														{
															"nativeSrc": "9127:25:7",
															"nodeType": "YulAssignment",
															"src": "9127:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9140:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9140:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9147:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9147:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9136:3:7"
																},
																"nativeSrc": "9136:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9136:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9127:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9127:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8085:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "8115:4:7",
														"nodeType": "YulTypedName",
														"src": "8115:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8121:8:7",
														"nodeType": "YulTypedName",
														"src": "8121:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8131:3:7",
														"nodeType": "YulTypedName",
														"src": "8131:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8139:5:7",
														"nodeType": "YulTypedName",
														"src": "8139:5:7",
														"type": ""
													}
												],
												"src": "8085:1073:7"
											},
											{
												"body": {
													"nativeSrc": "9207:43:7",
													"nodeType": "YulBlock",
													"src": "9207:43:7",
													"statements": [
														{
															"nativeSrc": "9217:27:7",
															"nodeType": "YulAssignment",
															"src": "9217:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9232:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9232:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9239:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9239:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9228:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9228:3:7"
																},
																"nativeSrc": "9228:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9228:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9217:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9217:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9164:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9189:5:7",
														"nodeType": "YulTypedName",
														"src": "9189:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9199:7:7",
														"nodeType": "YulTypedName",
														"src": "9199:7:7",
														"type": ""
													}
												],
												"src": "9164:86:7"
											},
											{
												"body": {
													"nativeSrc": "9320:217:7",
													"nodeType": "YulBlock",
													"src": "9320:217:7",
													"statements": [
														{
															"nativeSrc": "9330:31:7",
															"nodeType": "YulAssignment",
															"src": "9330:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9356:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9356:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9338:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9338:17:7"
																},
																"nativeSrc": "9338:23:7",
																"nodeType": "YulFunctionCall",
																"src": "9338:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9330:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9330:4:7"
																}
															]
														},
														{
															"nativeSrc": "9370:37:7",
															"nodeType": "YulAssignment",
															"src": "9370:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9398:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9398:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9382:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "9382:15:7"
																},
																"nativeSrc": "9382:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9382:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9370:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "9370:8:7"
																}
															]
														},
														{
															"nativeSrc": "9417:113:7",
															"nodeType": "YulAssignment",
															"src": "9417:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9447:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9447:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9453:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9453:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9463:66:7",
																		"nodeType": "YulLiteral",
																		"src": "9463:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9426:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "9426:20:7"
																},
																"nativeSrc": "9426:104:7",
																"nodeType": "YulFunctionCall",
																"src": "9426:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9417:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9417:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9256:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9295:4:7",
														"nodeType": "YulTypedName",
														"src": "9295:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9301:8:7",
														"nodeType": "YulTypedName",
														"src": "9301:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9314:5:7",
														"nodeType": "YulTypedName",
														"src": "9314:5:7",
														"type": ""
													}
												],
												"src": "9256:281:7"
											},
											{
												"body": {
													"nativeSrc": "9591:362:7",
													"nodeType": "YulBlock",
													"src": "9591:362:7",
													"statements": [
														{
															"nativeSrc": "9601:25:7",
															"nodeType": "YulAssignment",
															"src": "9601:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9624:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9624:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9606:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9606:17:7"
																},
																"nativeSrc": "9606:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9606:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9601:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9601:1:7"
																}
															]
														},
														{
															"nativeSrc": "9635:25:7",
															"nodeType": "YulAssignment",
															"src": "9635:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9658:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9658:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9640:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9640:17:7"
																},
																"nativeSrc": "9640:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9640:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9635:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9635:1:7"
																}
															]
														},
														{
															"nativeSrc": "9669:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9669:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9692:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9692:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9695:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9695:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9688:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9688:3:7"
																},
																"nativeSrc": "9688:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9688:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9673:11:7",
																	"nodeType": "YulTypedName",
																	"src": "9673:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9706:41:7",
															"nodeType": "YulAssignment",
															"src": "9706:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9735:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "9735:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9717:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9717:17:7"
																},
																"nativeSrc": "9717:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9717:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9706:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9706:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9924:22:7",
																"nodeType": "YulBlock",
																"src": "9924:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9926:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9926:16:7"
																			},
																			"nativeSrc": "9926:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9926:18:7"
																		},
																		"nativeSrc": "9926:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9926:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9857:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9857:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9850:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9850:6:7"
																				},
																				"nativeSrc": "9850:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9850:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9880:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9880:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9887:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "9887:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9896:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "9896:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9883:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9883:3:7"
																						},
																						"nativeSrc": "9883:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9883:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9877:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9877:2:7"
																				},
																				"nativeSrc": "9877:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9877:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9830:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9830:2:7"
																		},
																		"nativeSrc": "9830:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9830:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9810:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9810:6:7"
																},
																"nativeSrc": "9810:113:7",
																"nodeType": "YulFunctionCall",
																"src": "9810:113:7"
															},
															"nativeSrc": "9807:139:7",
															"nodeType": "YulIf",
															"src": "9807:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9543:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9574:1:7",
														"nodeType": "YulTypedName",
														"src": "9574:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9577:1:7",
														"nodeType": "YulTypedName",
														"src": "9577:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9583:7:7",
														"nodeType": "YulTypedName",
														"src": "9583:7:7",
														"type": ""
													}
												],
												"src": "9543:410:7"
											},
											{
												"body": {
													"nativeSrc": "10003:147:7",
													"nodeType": "YulBlock",
													"src": "10003:147:7",
													"statements": [
														{
															"nativeSrc": "10013:25:7",
															"nodeType": "YulAssignment",
															"src": "10013:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10036:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10036:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10018:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10018:17:7"
																},
																"nativeSrc": "10018:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10018:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10013:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10013:1:7"
																}
															]
														},
														{
															"nativeSrc": "10047:25:7",
															"nodeType": "YulAssignment",
															"src": "10047:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10070:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10070:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10052:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10052:17:7"
																},
																"nativeSrc": "10052:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10052:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10047:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10047:1:7"
																}
															]
														},
														{
															"nativeSrc": "10081:16:7",
															"nodeType": "YulAssignment",
															"src": "10081:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10092:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10092:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10095:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10095:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10088:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10088:3:7"
																},
																"nativeSrc": "10088:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10088:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10081:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10081:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10121:22:7",
																"nodeType": "YulBlock",
																"src": "10121:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10123:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10123:16:7"
																			},
																			"nativeSrc": "10123:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10123:18:7"
																		},
																		"nativeSrc": "10123:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10123:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10113:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10113:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10116:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10116:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10110:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10110:2:7"
																},
																"nativeSrc": "10110:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10110:10:7"
															},
															"nativeSrc": "10107:36:7",
															"nodeType": "YulIf",
															"src": "10107:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9959:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9990:1:7",
														"nodeType": "YulTypedName",
														"src": "9990:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9993:1:7",
														"nodeType": "YulTypedName",
														"src": "9993:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9999:3:7",
														"nodeType": "YulTypedName",
														"src": "9999:3:7",
														"type": ""
													}
												],
												"src": "9959:191:7"
											},
											{
												"body": {
													"nativeSrc": "10221:53:7",
													"nodeType": "YulBlock",
													"src": "10221:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10238:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10238:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10261:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10261:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10243:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "10243:17:7"
																		},
																		"nativeSrc": "10243:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10243:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10231:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10231:6:7"
																},
																"nativeSrc": "10231:37:7",
																"nodeType": "YulFunctionCall",
																"src": "10231:37:7"
															},
															"nativeSrc": "10231:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "10231:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10156:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10209:5:7",
														"nodeType": "YulTypedName",
														"src": "10209:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10216:3:7",
														"nodeType": "YulTypedName",
														"src": "10216:3:7",
														"type": ""
													}
												],
												"src": "10156:118:7"
											},
											{
												"body": {
													"nativeSrc": "10434:288:7",
													"nodeType": "YulBlock",
													"src": "10434:288:7",
													"statements": [
														{
															"nativeSrc": "10444:26:7",
															"nodeType": "YulAssignment",
															"src": "10444:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10456:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10456:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10467:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10467:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10452:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10452:3:7"
																},
																"nativeSrc": "10452:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10452:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10444:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10444:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10524:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10524:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10537:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10537:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10548:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10548:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10533:3:7"
																		},
																		"nativeSrc": "10533:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10533:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10480:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10480:43:7"
																},
																"nativeSrc": "10480:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10480:71:7"
															},
															"nativeSrc": "10480:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10480:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10605:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10605:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10618:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10618:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10629:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10629:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10614:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10614:3:7"
																		},
																		"nativeSrc": "10614:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10614:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10561:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10561:43:7"
																},
																"nativeSrc": "10561:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10561:72:7"
															},
															"nativeSrc": "10561:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10561:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10687:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10687:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10700:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10700:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10711:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10711:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10696:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10696:3:7"
																		},
																		"nativeSrc": "10696:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10696:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10643:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10643:43:7"
																},
																"nativeSrc": "10643:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10643:72:7"
															},
															"nativeSrc": "10643:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10643:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10280:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10390:9:7",
														"nodeType": "YulTypedName",
														"src": "10390:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10402:6:7",
														"nodeType": "YulTypedName",
														"src": "10402:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10410:6:7",
														"nodeType": "YulTypedName",
														"src": "10410:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10418:6:7",
														"nodeType": "YulTypedName",
														"src": "10418:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10429:4:7",
														"nodeType": "YulTypedName",
														"src": "10429:4:7",
														"type": ""
													}
												],
												"src": "10280:442:7"
											},
											{
												"body": {
													"nativeSrc": "10826:124:7",
													"nodeType": "YulBlock",
													"src": "10826:124:7",
													"statements": [
														{
															"nativeSrc": "10836:26:7",
															"nodeType": "YulAssignment",
															"src": "10836:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10848:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10848:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10859:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10859:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10844:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10844:3:7"
																},
																"nativeSrc": "10844:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10844:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10836:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10836:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10916:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10916:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10929:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10929:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10940:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10940:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10925:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10925:3:7"
																		},
																		"nativeSrc": "10925:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10925:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10872:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10872:43:7"
																},
																"nativeSrc": "10872:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10872:71:7"
															},
															"nativeSrc": "10872:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10872:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10728:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10798:9:7",
														"nodeType": "YulTypedName",
														"src": "10798:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10810:6:7",
														"nodeType": "YulTypedName",
														"src": "10810:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10821:4:7",
														"nodeType": "YulTypedName",
														"src": "10821:4:7",
														"type": ""
													}
												],
												"src": "10728:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611c5e380380611c5e83398181016040528101906100319190610543565b806040518060400160405280600c81526020017f6368656d697374546f6b656e00000000000000000000000000000000000000008152506040518060400160405280600481526020017f4348544b0000000000000000000000000000000000000000000000000000000081525081600390816100ad91906107bb565b5080600490816100bd91906107bb565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610899565b60405180910390fd5b61013f8161017c60201b60201c565b506101758261015261023f60201b60201c565b600a61015e9190610a1a565b606461016a9190610a64565b61024760201b60201c565b5050610b35565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102b7575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102ae9190610899565b60405180910390fd5b6102c85f83836102cc60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361031c578060025f8282546103109190610aa5565b925050819055506103ea565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103a5578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161039c93929190610ae7565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610431578060025f828254039250508190555061047b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104d89190610b1c565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610512826104e9565b9050919050565b61052281610508565b811461052c575f80fd5b50565b5f8151905061053d81610519565b92915050565b5f8060408385031215610559576105586104e5565b5b5f6105668582860161052f565b92505060206105778582860161052f565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105fc57607f821691505b60208210810361060f5761060e6105b8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106717fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610636565b61067b8683610636565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6106bf6106ba6106b584610693565b61069c565b610693565b9050919050565b5f819050919050565b6106d8836106a5565b6106ec6106e4826106c6565b848454610642565b825550505050565b5f90565b6107006106f4565b61070b8184846106cf565b505050565b5b8181101561072e576107235f826106f8565b600181019050610711565b5050565b601f8211156107735761074481610615565b61074d84610627565b8101602085101561075c578190505b61077061076885610627565b830182610710565b50505b505050565b5f82821c905092915050565b5f6107935f1984600802610778565b1980831691505092915050565b5f6107ab8383610784565b9150826002028217905092915050565b6107c482610581565b67ffffffffffffffff8111156107dd576107dc61058b565b5b6107e782546105e5565b6107f2828285610732565b5f60209050601f831160018114610823575f8415610811578287015190505b61081b85826107a0565b865550610882565b601f19841661083186610615565b5f5b8281101561085857848901518255600182019150602085019450602081019050610833565b868310156108755784890151610871601f891682610784565b8355505b6001600288020188555050505b505050505050565b61089381610508565b82525050565b5f6020820190506108ac5f83018461088a565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115610934578086048111156109105761090f6108b2565b5b600185161561091f5780820291505b808102905061092d856108df565b94506108f4565b94509492505050565b5f8261094c5760019050610a07565b81610959575f9050610a07565b816001811461096f5760028114610979576109a8565b6001915050610a07565b60ff84111561098b5761098a6108b2565b5b8360020a9150848211156109a2576109a16108b2565b5b50610a07565b5060208310610133831016604e8410600b84101617156109dd5782820a9050838111156109d8576109d76108b2565b5b610a07565b6109ea84848460016108eb565b92509050818404811115610a0157610a006108b2565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610a2482610693565b9150610a2f83610a0e565b9250610a5c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461093d565b905092915050565b5f610a6e82610693565b9150610a7983610693565b9250828202610a8781610693565b91508282048414831517610a9e57610a9d6108b2565b5b5092915050565b5f610aaf82610693565b9150610aba83610693565b9250828201905080821115610ad257610ad16108b2565b5b92915050565b610ae181610693565b82525050565b5f606082019050610afa5f83018661088a565b610b076020830185610ad8565b610b146040830184610ad8565b949350505050565b5f602082019050610b2f5f830184610ad8565b92915050565b61111c80610b425f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b41146101ff578063a9059cbb1461021d578063dd62ed3e1461024d578063f2fde38b1461027d576100cd565b806370a08231146101a7578063715018a6146101d75780638da5cb5b146101e1576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d578063313ce5671461016d57806340c10f191461018b575b5f80fd5b6100d9610299565b6040516100e69190610d95565b60405180910390f35b61010960048036038101906101049190610e46565b610329565b6040516101169190610e9e565b60405180910390f35b61012761034b565b6040516101349190610ec6565b60405180910390f35b61015760048036038101906101529190610edf565b610354565b6040516101649190610e9e565b60405180910390f35b610175610382565b6040516101829190610f4a565b60405180910390f35b6101a560048036038101906101a09190610e46565b61038a565b005b6101c160048036038101906101bc9190610f63565b6103a0565b6040516101ce9190610ec6565b60405180910390f35b6101df6103e5565b005b6101e96103f8565b6040516101f69190610f9d565b60405180910390f35b610207610420565b6040516102149190610d95565b60405180910390f35b61023760048036038101906102329190610e46565b6104b0565b6040516102449190610e9e565b60405180910390f35b61026760048036038101906102629190610fb6565b6104d2565b6040516102749190610ec6565b60405180910390f35b61029760048036038101906102929190610f63565b610554565b005b6060600380546102a890611021565b80601f01602080910402602001604051908101604052809291908181526020018280546102d490611021565b801561031f5780601f106102f65761010080835404028352916020019161031f565b820191905f5260205f20905b81548152906001019060200180831161030257829003601f168201915b5050505050905090565b5f806103336105d8565b90506103408185856105df565b600191505092915050565b5f600254905090565b5f8061035e6105d8565b905061036b8582856105f1565b610376858585610684565b60019150509392505050565b5f6012905090565b610392610774565b61039c82826107fb565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6103ed610774565b6103f65f61087a565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461042f90611021565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90611021565b80156104a65780601f1061047d576101008083540402835291602001916104a6565b820191905f5260205f20905b81548152906001019060200180831161048957829003601f168201915b5050505050905090565b5f806104ba6105d8565b90506104c7818585610684565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61055c610774565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105cc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105c39190610f9d565b60405180910390fd5b6105d58161087a565b50565b5f33905090565b6105ec838383600161093d565b505050565b5f6105fc84846104d2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561067e578181101561066f578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161066693929190611051565b60405180910390fd5b61067d84848484035f61093d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106eb9190610f9d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610764575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161075b9190610f9d565b60405180910390fd5b61076f838383610b0c565b505050565b61077c6105d8565b73ffffffffffffffffffffffffffffffffffffffff1661079a6103f8565b73ffffffffffffffffffffffffffffffffffffffff16146107f9576107bd6105d8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107f09190610f9d565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361086b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108629190610f9d565b60405180910390fd5b6108765f8383610b0c565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109ad575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109a49190610f9d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a1d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a149190610f9d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610b06578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610afd9190610ec6565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5c578060025f828254610b5091906110b3565b92505081905550610c2a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610be5578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610bdc93929190611051565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c71578060025f8282540392505081905550610cbb565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d189190610ec6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d6782610d25565b610d718185610d2f565b9350610d81818560208601610d3f565b610d8a81610d4d565b840191505092915050565b5f6020820190508181035f830152610dad8184610d5d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610de282610db9565b9050919050565b610df281610dd8565b8114610dfc575f80fd5b50565b5f81359050610e0d81610de9565b92915050565b5f819050919050565b610e2581610e13565b8114610e2f575f80fd5b50565b5f81359050610e4081610e1c565b92915050565b5f8060408385031215610e5c57610e5b610db5565b5b5f610e6985828601610dff565b9250506020610e7a85828601610e32565b9150509250929050565b5f8115159050919050565b610e9881610e84565b82525050565b5f602082019050610eb15f830184610e8f565b92915050565b610ec081610e13565b82525050565b5f602082019050610ed95f830184610eb7565b92915050565b5f805f60608486031215610ef657610ef5610db5565b5b5f610f0386828701610dff565b9350506020610f1486828701610dff565b9250506040610f2586828701610e32565b9150509250925092565b5f60ff82169050919050565b610f4481610f2f565b82525050565b5f602082019050610f5d5f830184610f3b565b92915050565b5f60208284031215610f7857610f77610db5565b5b5f610f8584828501610dff565b91505092915050565b610f9781610dd8565b82525050565b5f602082019050610fb05f830184610f8e565b92915050565b5f8060408385031215610fcc57610fcb610db5565b5b5f610fd985828601610dff565b9250506020610fea85828601610dff565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061103857607f821691505b60208210810361104b5761104a610ff4565b5b50919050565b5f6060820190506110645f830186610f8e565b6110716020830185610eb7565b61107e6040830184610eb7565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110bd82610e13565b91506110c883610e13565b92508282019050808211156110e0576110df611086565b5b9291505056fea2646970667358221220445fc5cf21706ab1dfe4bf3a6bfabc86d421bbd15d8316477b210d704dbfca5f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C5E CODESIZE SUB DUP1 PUSH2 0x1C5E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x543 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6368656D697374546F6B656E0000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4348544B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x17C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x175 DUP3 PUSH2 0x152 PUSH2 0x23F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x64 PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xA64 JUMP JUMPDEST PUSH2 0x247 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xB35 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C8 PUSH0 DUP4 DUP4 PUSH2 0x2CC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3EA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3A5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x431 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x47B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x512 DUP3 PUSH2 0x4E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x522 DUP2 PUSH2 0x508 JUMP JUMPDEST DUP2 EQ PUSH2 0x52C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x53D DUP2 PUSH2 0x519 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x559 JUMPI PUSH2 0x558 PUSH2 0x4E5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x566 DUP6 DUP3 DUP7 ADD PUSH2 0x52F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x577 DUP6 DUP3 DUP7 ADD PUSH2 0x52F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x60F JUMPI PUSH2 0x60E PUSH2 0x5B8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x671 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x67B DUP7 DUP4 PUSH2 0x636 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6BF PUSH2 0x6BA PUSH2 0x6B5 DUP5 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x69C JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D8 DUP4 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x6E4 DUP3 PUSH2 0x6C6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x642 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x700 PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x70B DUP2 DUP5 DUP5 PUSH2 0x6CF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72E JUMPI PUSH2 0x723 PUSH0 DUP3 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x711 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x773 JUMPI PUSH2 0x744 DUP2 PUSH2 0x615 JUMP JUMPDEST PUSH2 0x74D DUP5 PUSH2 0x627 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x75C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x770 PUSH2 0x768 DUP6 PUSH2 0x627 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x710 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x793 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x778 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7AB DUP4 DUP4 PUSH2 0x784 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C4 DUP3 PUSH2 0x581 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0x58B JUMP JUMPDEST JUMPDEST PUSH2 0x7E7 DUP3 SLOAD PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x7F2 DUP3 DUP3 DUP6 PUSH2 0x732 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x823 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x811 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x81B DUP6 DUP3 PUSH2 0x7A0 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x882 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x831 DUP7 PUSH2 0x615 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x858 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x833 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x875 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x871 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x784 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x893 DUP2 PUSH2 0x508 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AC PUSH0 DUP4 ADD DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x934 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x910 JUMPI PUSH2 0x90F PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x91F JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x92D DUP6 PUSH2 0x8DF JUMP JUMPDEST SWAP5 POP PUSH2 0x8F4 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x94C JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xA07 JUMP JUMPDEST DUP2 PUSH2 0x959 JUMPI PUSH0 SWAP1 POP PUSH2 0xA07 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x96F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x979 JUMPI PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA07 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x98B JUMPI PUSH2 0x98A PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x9A2 JUMPI PUSH2 0x9A1 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST POP PUSH2 0xA07 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x9DD JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x9D8 JUMPI PUSH2 0x9D7 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x9EA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x8EB JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH2 0xA00 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA24 DUP3 PUSH2 0x693 JUMP JUMPDEST SWAP2 POP PUSH2 0xA2F DUP4 PUSH2 0xA0E JUMP JUMPDEST SWAP3 POP PUSH2 0xA5C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x93D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA6E DUP3 PUSH2 0x693 JUMP JUMPDEST SWAP2 POP PUSH2 0xA79 DUP4 PUSH2 0x693 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA87 DUP2 PUSH2 0x693 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA9E JUMPI PUSH2 0xA9D PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAAF DUP3 PUSH2 0x693 JUMP JUMPDEST SWAP2 POP PUSH2 0xABA DUP4 PUSH2 0x693 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAE1 DUP2 PUSH2 0x693 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAFA PUSH0 DUP4 ADD DUP7 PUSH2 0x88A JUMP JUMPDEST PUSH2 0xB07 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAD8 JUMP JUMPDEST PUSH2 0xB14 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAD8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB2F PUSH0 DUP4 ADD DUP5 PUSH2 0xAD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x111C DUP1 PUSH2 0xB42 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27D JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A8 SWAP1 PUSH2 0x1021 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D4 SWAP1 PUSH2 0x1021 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x302 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x333 PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x340 DUP2 DUP6 DUP6 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x35E PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x36B DUP6 DUP3 DUP6 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x376 DUP6 DUP6 DUP6 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x392 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x39C DUP3 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x774 JUMP JUMPDEST PUSH2 0x3F6 PUSH0 PUSH2 0x87A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x42F SWAP1 PUSH2 0x1021 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45B SWAP1 PUSH2 0x1021 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4BA PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4C7 DUP2 DUP6 DUP6 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x55C PUSH2 0x774 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D5 DUP2 PUSH2 0x87A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5EC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x93D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5FC DUP5 DUP5 PUSH2 0x4D2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x67E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x66F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x93D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x764 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76F DUP4 DUP4 DUP4 PUSH2 0xB0C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x77C PUSH2 0x5D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x79A PUSH2 0x3F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F9 JUMPI PUSH2 0x7BD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x876 PUSH0 DUP4 DUP4 PUSH2 0xB0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB06 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC2A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBE5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC71 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCBB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD67 DUP3 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0xD71 DUP2 DUP6 PUSH2 0xD2F JUMP JUMPDEST SWAP4 POP PUSH2 0xD81 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD3F JUMP JUMPDEST PUSH2 0xD8A DUP2 PUSH2 0xD4D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDAD DUP2 DUP5 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE2 DUP3 PUSH2 0xDB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF2 DUP2 PUSH2 0xDD8 JUMP JUMPDEST DUP2 EQ PUSH2 0xDFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0D DUP2 PUSH2 0xDE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE25 DUP2 PUSH2 0xE13 JUMP JUMPDEST DUP2 EQ PUSH2 0xE2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE40 DUP2 PUSH2 0xE1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xDB5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE69 DUP6 DUP3 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE7A DUP6 DUP3 DUP7 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xE84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH0 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEC0 DUP2 PUSH2 0xE13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED9 PUSH0 DUP4 ADD DUP5 PUSH2 0xEB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH2 0xEF5 PUSH2 0xDB5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF03 DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF14 DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF25 DUP7 DUP3 DUP8 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF44 DUP2 PUSH2 0xF2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5D PUSH0 DUP4 ADD DUP5 PUSH2 0xF3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF78 JUMPI PUSH2 0xF77 PUSH2 0xDB5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF85 DUP5 DUP3 DUP6 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF97 DUP2 PUSH2 0xDD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFB0 PUSH0 DUP4 ADD DUP5 PUSH2 0xF8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0xDB5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD9 DUP6 DUP3 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFEA DUP6 DUP3 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1038 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x104B JUMPI PUSH2 0x104A PUSH2 0xFF4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1064 PUSH0 DUP4 ADD DUP7 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x1071 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x107E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10BD DUP3 PUSH2 0xE13 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C8 DUP4 PUSH2 0xE13 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10E0 JUMPI PUSH2 0x10DF PUSH2 0x1086 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH0 0xC5 0xCF 0x21 PUSH17 0x6AB1DFE4BF3A6BFABC86D421BBD15D8316 SELFBALANCE PUSH28 0x210D704DBFCA5F64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "264:340:6:-:0;;;311:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;420:12;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;450:40:6::2;456:9;479:10;:8;;;:10;;:::i;:::-;473:2;:16;;;;:::i;:::-;467:3;:22;;;;:::i;:::-;450:5;;;:40;;:::i;:::-;311:187:::0;;264:340;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2688:82:2:-;2737:5;2761:2;2754:9;;2688:82;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:180::-;6985:77;6982:1;6975:88;7082:4;7079:1;7072:15;7106:4;7103:1;7096:15;7123:102;7165:8;7212:5;7209:1;7205:13;7184:34;;7123:102;;;:::o;7231:848::-;7292:5;7299:4;7323:6;7314:15;;7347:5;7338:14;;7361:712;7382:1;7372:8;7369:15;7361:712;;;7477:4;7472:3;7468:14;7462:4;7459:24;7456:50;;;7486:18;;:::i;:::-;7456:50;7536:1;7526:8;7522:16;7519:451;;;7951:4;7944:5;7940:16;7931:25;;7519:451;8001:4;7995;7991:15;7983:23;;8031:32;8054:8;8031:32;:::i;:::-;8019:44;;7361:712;;;7231:848;;;;;;;:::o;8085:1073::-;8139:5;8330:8;8320:40;;8351:1;8342:10;;8353:5;;8320:40;8379:4;8369:36;;8396:1;8387:10;;8398:5;;8369:36;8465:4;8513:1;8508:27;;;;8549:1;8544:191;;;;8458:277;;8508:27;8526:1;8517:10;;8528:5;;;8544:191;8589:3;8579:8;8576:17;8573:43;;;8596:18;;:::i;:::-;8573:43;8645:8;8642:1;8638:16;8629:25;;8680:3;8673:5;8670:14;8667:40;;;8687:18;;:::i;:::-;8667:40;8720:5;;;8458:277;;8844:2;8834:8;8831:16;8825:3;8819:4;8816:13;8812:36;8794:2;8784:8;8781:16;8776:2;8770:4;8767:12;8763:35;8747:111;8744:246;;;8900:8;8894:4;8890:19;8881:28;;8935:3;8928:5;8925:14;8922:40;;;8942:18;;:::i;:::-;8922:40;8975:5;;8744:246;9015:42;9053:3;9043:8;9037:4;9034:1;9015:42;:::i;:::-;9000:57;;;;9089:4;9084:3;9080:14;9073:5;9070:25;9067:51;;;9098:18;;:::i;:::-;9067:51;9147:4;9140:5;9136:16;9127:25;;8085:1073;;;;;;:::o;9164:86::-;9199:7;9239:4;9232:5;9228:16;9217:27;;9164:86;;;:::o;9256:281::-;9314:5;9338:23;9356:4;9338:23;:::i;:::-;9330:31;;9382:25;9398:8;9382:25;:::i;:::-;9370:37;;9426:104;9463:66;9453:8;9447:4;9426:104;:::i;:::-;9417:113;;9256:281;;;;:::o;9543:410::-;9583:7;9606:20;9624:1;9606:20;:::i;:::-;9601:25;;9640:20;9658:1;9640:20;:::i;:::-;9635:25;;9695:1;9692;9688:9;9717:30;9735:11;9717:30;:::i;:::-;9706:41;;9896:1;9887:7;9883:15;9880:1;9877:22;9857:1;9850:9;9830:83;9807:139;;9926:18;;:::i;:::-;9807:139;9591:362;9543:410;;;;:::o;9959:191::-;9999:3;10018:20;10036:1;10018:20;:::i;:::-;10013:25;;10052:20;10070:1;10052:20;:::i;:::-;10047:25;;10095:1;10092;10088:9;10081:16;;10116:3;10113:1;10110:10;10107:36;;;10123:18;;:::i;:::-;10107:36;9959:191;;;;:::o;10156:118::-;10243:24;10261:5;10243:24;:::i;:::-;10238:3;10231:37;10156:118;;:::o;10280:442::-;10429:4;10467:2;10456:9;10452:18;10444:26;;10480:71;10548:1;10537:9;10533:17;10524:6;10480:71;:::i;:::-;10561:72;10629:2;10618:9;10614:18;10605:6;10561:72;:::i;:::-;10643;10711:2;10700:9;10696:18;10687:6;10643:72;:::i;:::-;10280:442;;;;;;:::o;10728:222::-;10821:4;10859:2;10848:9;10844:18;10836:26;;10872:71;10940:1;10929:9;10925:17;10916:6;10872:71;:::i;:::-;10728:222;;;;:::o;264:340:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1503,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2365,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1908,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2043,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1496,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1521,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2170,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1668,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2828,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1234,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 809,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 928,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 898,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_983": {
									"entryPoint": 906,
									"id": 983,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 665,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1016,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 997,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1056,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 843,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 852,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1364,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1200,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4177,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3391,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4084,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7253:7",
										"nodeType": "YulBlock",
										"src": "0:7253:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5146:53:7",
													"nodeType": "YulBlock",
													"src": "5146:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:7"
																		},
																		"nativeSrc": "5168:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:7"
																},
																"nativeSrc": "5156:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:7"
															},
															"nativeSrc": "5156:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:7",
														"nodeType": "YulTypedName",
														"src": "5134:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:7",
														"nodeType": "YulTypedName",
														"src": "5141:3:7",
														"type": ""
													}
												],
												"src": "5081:118:7"
											},
											{
												"body": {
													"nativeSrc": "5303:124:7",
													"nodeType": "YulBlock",
													"src": "5303:124:7",
													"statements": [
														{
															"nativeSrc": "5313:26:7",
															"nodeType": "YulAssignment",
															"src": "5313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:7"
																},
																"nativeSrc": "5321:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:7"
																},
																"nativeSrc": "5349:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:7"
															},
															"nativeSrc": "5349:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:7",
														"nodeType": "YulTypedName",
														"src": "5275:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:7",
														"nodeType": "YulTypedName",
														"src": "5287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:7",
														"nodeType": "YulTypedName",
														"src": "5298:4:7",
														"type": ""
													}
												],
												"src": "5205:222:7"
											},
											{
												"body": {
													"nativeSrc": "5516:391:7",
													"nodeType": "YulBlock",
													"src": "5516:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:7",
																"nodeType": "YulBlock",
																"src": "5562:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:7"
																			},
																			"nativeSrc": "5564:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:7"
																		},
																		"nativeSrc": "5564:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:7"
																		},
																		"nativeSrc": "5533:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:7"
																},
																"nativeSrc": "5529:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:7"
															},
															"nativeSrc": "5526:119:7",
															"nodeType": "YulIf",
															"src": "5526:119:7"
														},
														{
															"nativeSrc": "5655:117:7",
															"nodeType": "YulBlock",
															"src": "5655:117:7",
															"statements": [
																{
																	"nativeSrc": "5670:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:7"
																				},
																				"nativeSrc": "5730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:7"
																		},
																		"nativeSrc": "5709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:7",
															"nodeType": "YulBlock",
															"src": "5782:118:7",
															"statements": [
																{
																	"nativeSrc": "5797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:7"
																				},
																				"nativeSrc": "5858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:7"
																		},
																		"nativeSrc": "5837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:7",
														"nodeType": "YulTypedName",
														"src": "5478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:7",
														"nodeType": "YulTypedName",
														"src": "5489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:7",
														"nodeType": "YulTypedName",
														"src": "5501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:7",
														"nodeType": "YulTypedName",
														"src": "5509:6:7",
														"type": ""
													}
												],
												"src": "5433:474:7"
											},
											{
												"body": {
													"nativeSrc": "5941:152:7",
													"nodeType": "YulBlock",
													"src": "5941:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:7"
																},
																"nativeSrc": "5951:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:7"
															},
															"nativeSrc": "5951:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:7"
																},
																"nativeSrc": "6048:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:7"
															},
															"nativeSrc": "6048:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:7"
																},
																"nativeSrc": "6072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:7"
															},
															"nativeSrc": "6072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:7"
											},
											{
												"body": {
													"nativeSrc": "6150:269:7",
													"nodeType": "YulBlock",
													"src": "6150:269:7",
													"statements": [
														{
															"nativeSrc": "6160:22:7",
															"nodeType": "YulAssignment",
															"src": "6160:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:7"
																},
																"nativeSrc": "6170:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:7"
																}
															]
														},
														{
															"nativeSrc": "6191:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:7"
																},
																"nativeSrc": "6217:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:7",
																"nodeType": "YulBlock",
																"src": "6268:51:7",
																"statements": [
																	{
																		"nativeSrc": "6282:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:7"
																			},
																			"nativeSrc": "6292:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:7"
																},
																"nativeSrc": "6241:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:7"
															},
															"nativeSrc": "6238:81:7",
															"nodeType": "YulIf",
															"src": "6238:81:7"
														},
														{
															"body": {
																"nativeSrc": "6371:42:7",
																"nodeType": "YulBlock",
																"src": "6371:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:7"
																			},
																			"nativeSrc": "6385:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:7"
																		},
																		"nativeSrc": "6385:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:7"
																		},
																		"nativeSrc": "6355:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:7"
																},
																"nativeSrc": "6332:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:7"
															},
															"nativeSrc": "6329:84:7",
															"nodeType": "YulIf",
															"src": "6329:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:7",
														"nodeType": "YulTypedName",
														"src": "6134:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:7",
														"nodeType": "YulTypedName",
														"src": "6143:6:7",
														"type": ""
													}
												],
												"src": "6099:320:7"
											},
											{
												"body": {
													"nativeSrc": "6579:288:7",
													"nodeType": "YulBlock",
													"src": "6579:288:7",
													"statements": [
														{
															"nativeSrc": "6589:26:7",
															"nodeType": "YulAssignment",
															"src": "6589:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6601:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6612:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6612:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6597:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6597:3:7"
																},
																"nativeSrc": "6597:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6597:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6589:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6589:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6669:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6669:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6682:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6682:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6693:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6693:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6678:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6678:3:7"
																		},
																		"nativeSrc": "6678:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6678:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6625:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6625:43:7"
																},
																"nativeSrc": "6625:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6625:71:7"
															},
															"nativeSrc": "6625:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6625:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6750:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6750:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6763:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6763:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6774:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6774:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6759:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6759:3:7"
																		},
																		"nativeSrc": "6759:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6759:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6706:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6706:43:7"
																},
																"nativeSrc": "6706:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6706:72:7"
															},
															"nativeSrc": "6706:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6706:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6832:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6832:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6845:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6845:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6856:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6856:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6841:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:7"
																		},
																		"nativeSrc": "6841:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6841:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6788:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6788:43:7"
																},
																"nativeSrc": "6788:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6788:72:7"
															},
															"nativeSrc": "6788:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6788:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6425:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6535:9:7",
														"nodeType": "YulTypedName",
														"src": "6535:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6547:6:7",
														"nodeType": "YulTypedName",
														"src": "6547:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6555:6:7",
														"nodeType": "YulTypedName",
														"src": "6555:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6563:6:7",
														"nodeType": "YulTypedName",
														"src": "6563:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6574:4:7",
														"nodeType": "YulTypedName",
														"src": "6574:4:7",
														"type": ""
													}
												],
												"src": "6425:442:7"
											},
											{
												"body": {
													"nativeSrc": "6901:152:7",
													"nodeType": "YulBlock",
													"src": "6901:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6918:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6918:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6921:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6921:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6911:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6911:6:7"
																},
																"nativeSrc": "6911:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6911:88:7"
															},
															"nativeSrc": "6911:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6911:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7015:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7015:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7018:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7018:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:7"
																},
																"nativeSrc": "7008:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7008:15:7"
															},
															"nativeSrc": "7008:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7008:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7039:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7039:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7042:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7032:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7032:6:7"
																},
																"nativeSrc": "7032:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7032:15:7"
															},
															"nativeSrc": "7032:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7032:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6873:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6873:180:7"
											},
											{
												"body": {
													"nativeSrc": "7103:147:7",
													"nodeType": "YulBlock",
													"src": "7103:147:7",
													"statements": [
														{
															"nativeSrc": "7113:25:7",
															"nodeType": "YulAssignment",
															"src": "7113:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7136:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7136:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7118:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7118:17:7"
																},
																"nativeSrc": "7118:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7118:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7113:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7113:1:7"
																}
															]
														},
														{
															"nativeSrc": "7147:25:7",
															"nodeType": "YulAssignment",
															"src": "7147:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7170:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7170:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7152:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7152:17:7"
																},
																"nativeSrc": "7152:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7152:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7147:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7147:1:7"
																}
															]
														},
														{
															"nativeSrc": "7181:16:7",
															"nodeType": "YulAssignment",
															"src": "7181:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7192:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7192:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7195:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7195:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7188:3:7"
																},
																"nativeSrc": "7188:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7188:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7181:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7181:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7221:22:7",
																"nodeType": "YulBlock",
																"src": "7221:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7223:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7223:16:7"
																			},
																			"nativeSrc": "7223:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7223:18:7"
																		},
																		"nativeSrc": "7223:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7223:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7213:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7213:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7216:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7216:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7210:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7210:2:7"
																},
																"nativeSrc": "7210:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7210:10:7"
															},
															"nativeSrc": "7207:36:7",
															"nodeType": "YulIf",
															"src": "7207:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7059:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7090:1:7",
														"nodeType": "YulTypedName",
														"src": "7090:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7093:1:7",
														"nodeType": "YulTypedName",
														"src": "7093:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7099:3:7",
														"nodeType": "YulTypedName",
														"src": "7099:3:7",
														"type": ""
													}
												],
												"src": "7059:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b41146101ff578063a9059cbb1461021d578063dd62ed3e1461024d578063f2fde38b1461027d576100cd565b806370a08231146101a7578063715018a6146101d75780638da5cb5b146101e1576100cd565b806306fdde03146100d1578063095ea7b3146100ef57806318160ddd1461011f57806323b872dd1461013d578063313ce5671461016d57806340c10f191461018b575b5f80fd5b6100d9610299565b6040516100e69190610d95565b60405180910390f35b61010960048036038101906101049190610e46565b610329565b6040516101169190610e9e565b60405180910390f35b61012761034b565b6040516101349190610ec6565b60405180910390f35b61015760048036038101906101529190610edf565b610354565b6040516101649190610e9e565b60405180910390f35b610175610382565b6040516101829190610f4a565b60405180910390f35b6101a560048036038101906101a09190610e46565b61038a565b005b6101c160048036038101906101bc9190610f63565b6103a0565b6040516101ce9190610ec6565b60405180910390f35b6101df6103e5565b005b6101e96103f8565b6040516101f69190610f9d565b60405180910390f35b610207610420565b6040516102149190610d95565b60405180910390f35b61023760048036038101906102329190610e46565b6104b0565b6040516102449190610e9e565b60405180910390f35b61026760048036038101906102629190610fb6565b6104d2565b6040516102749190610ec6565b60405180910390f35b61029760048036038101906102929190610f63565b610554565b005b6060600380546102a890611021565b80601f01602080910402602001604051908101604052809291908181526020018280546102d490611021565b801561031f5780601f106102f65761010080835404028352916020019161031f565b820191905f5260205f20905b81548152906001019060200180831161030257829003601f168201915b5050505050905090565b5f806103336105d8565b90506103408185856105df565b600191505092915050565b5f600254905090565b5f8061035e6105d8565b905061036b8582856105f1565b610376858585610684565b60019150509392505050565b5f6012905090565b610392610774565b61039c82826107fb565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6103ed610774565b6103f65f61087a565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461042f90611021565b80601f016020809104026020016040519081016040528092919081815260200182805461045b90611021565b80156104a65780601f1061047d576101008083540402835291602001916104a6565b820191905f5260205f20905b81548152906001019060200180831161048957829003601f168201915b5050505050905090565b5f806104ba6105d8565b90506104c7818585610684565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61055c610774565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105cc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105c39190610f9d565b60405180910390fd5b6105d58161087a565b50565b5f33905090565b6105ec838383600161093d565b505050565b5f6105fc84846104d2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561067e578181101561066f578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161066693929190611051565b60405180910390fd5b61067d84848484035f61093d565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106f4575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106eb9190610f9d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610764575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161075b9190610f9d565b60405180910390fd5b61076f838383610b0c565b505050565b61077c6105d8565b73ffffffffffffffffffffffffffffffffffffffff1661079a6103f8565b73ffffffffffffffffffffffffffffffffffffffff16146107f9576107bd6105d8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107f09190610f9d565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361086b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108629190610f9d565b60405180910390fd5b6108765f8383610b0c565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109ad575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109a49190610f9d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a1d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a149190610f9d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610b06578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610afd9190610ec6565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5c578060025f828254610b5091906110b3565b92505081905550610c2a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610be5578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610bdc93929190611051565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c71578060025f8282540392505081905550610cbb565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d189190610ec6565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d6782610d25565b610d718185610d2f565b9350610d81818560208601610d3f565b610d8a81610d4d565b840191505092915050565b5f6020820190508181035f830152610dad8184610d5d565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610de282610db9565b9050919050565b610df281610dd8565b8114610dfc575f80fd5b50565b5f81359050610e0d81610de9565b92915050565b5f819050919050565b610e2581610e13565b8114610e2f575f80fd5b50565b5f81359050610e4081610e1c565b92915050565b5f8060408385031215610e5c57610e5b610db5565b5b5f610e6985828601610dff565b9250506020610e7a85828601610e32565b9150509250929050565b5f8115159050919050565b610e9881610e84565b82525050565b5f602082019050610eb15f830184610e8f565b92915050565b610ec081610e13565b82525050565b5f602082019050610ed95f830184610eb7565b92915050565b5f805f60608486031215610ef657610ef5610db5565b5b5f610f0386828701610dff565b9350506020610f1486828701610dff565b9250506040610f2586828701610e32565b9150509250925092565b5f60ff82169050919050565b610f4481610f2f565b82525050565b5f602082019050610f5d5f830184610f3b565b92915050565b5f60208284031215610f7857610f77610db5565b5b5f610f8584828501610dff565b91505092915050565b610f9781610dd8565b82525050565b5f602082019050610fb05f830184610f8e565b92915050565b5f8060408385031215610fcc57610fcb610db5565b5b5f610fd985828601610dff565b9250506020610fea85828601610dff565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061103857607f821691505b60208210810361104b5761104a610ff4565b5b50919050565b5f6060820190506110645f830186610f8e565b6110716020830185610eb7565b61107e6040830184610eb7565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110bd82610e13565b91506110c883610e13565b92508282019050808211156110e0576110df611086565b5b9291505056fea2646970667358221220445fc5cf21706ab1dfe4bf3a6bfabc86d421bbd15d8316477b210d704dbfca5f64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x27D JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E1 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD9 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x3E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E9 PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH2 0x420 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x214 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x244 SWAP2 SWAP1 PUSH2 0xE9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xFB6 JUMP JUMPDEST PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2A8 SWAP1 PUSH2 0x1021 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D4 SWAP1 PUSH2 0x1021 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x31F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x31F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x302 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x333 PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x340 DUP2 DUP6 DUP6 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x35E PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x36B DUP6 DUP3 DUP6 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x376 DUP6 DUP6 DUP6 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x392 PUSH2 0x774 JUMP JUMPDEST PUSH2 0x39C DUP3 DUP3 PUSH2 0x7FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3ED PUSH2 0x774 JUMP JUMPDEST PUSH2 0x3F6 PUSH0 PUSH2 0x87A JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x42F SWAP1 PUSH2 0x1021 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45B SWAP1 PUSH2 0x1021 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4A6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4A6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x489 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4BA PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x4C7 DUP2 DUP6 DUP6 PUSH2 0x684 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x55C PUSH2 0x774 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5CC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C3 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5D5 DUP2 PUSH2 0x87A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5EC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x93D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5FC DUP5 DUP5 PUSH2 0x4D2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x67E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x66F JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67D DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x93D JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x764 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75B SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76F DUP4 DUP4 DUP4 PUSH2 0xB0C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x77C PUSH2 0x5D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x79A PUSH2 0x3F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F9 JUMPI PUSH2 0x7BD PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x876 PUSH0 DUP4 DUP4 PUSH2 0xB0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA14 SWAP2 SWAP1 PUSH2 0xF9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xB06 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x10B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC2A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xBE5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC71 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCBB JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD67 DUP3 PUSH2 0xD25 JUMP JUMPDEST PUSH2 0xD71 DUP2 DUP6 PUSH2 0xD2F JUMP JUMPDEST SWAP4 POP PUSH2 0xD81 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD3F JUMP JUMPDEST PUSH2 0xD8A DUP2 PUSH2 0xD4D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDAD DUP2 DUP5 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDE2 DUP3 PUSH2 0xDB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF2 DUP2 PUSH2 0xDD8 JUMP JUMPDEST DUP2 EQ PUSH2 0xDFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0D DUP2 PUSH2 0xDE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE25 DUP2 PUSH2 0xE13 JUMP JUMPDEST DUP2 EQ PUSH2 0xE2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE40 DUP2 PUSH2 0xE1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH2 0xE5B PUSH2 0xDB5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE69 DUP6 DUP3 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE7A DUP6 DUP3 DUP7 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xE84 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH0 DUP4 ADD DUP5 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEC0 DUP2 PUSH2 0xE13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED9 PUSH0 DUP4 ADD DUP5 PUSH2 0xEB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEF6 JUMPI PUSH2 0xEF5 PUSH2 0xDB5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF03 DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xF14 DUP7 DUP3 DUP8 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xF25 DUP7 DUP3 DUP8 ADD PUSH2 0xE32 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF44 DUP2 PUSH2 0xF2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5D PUSH0 DUP4 ADD DUP5 PUSH2 0xF3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF78 JUMPI PUSH2 0xF77 PUSH2 0xDB5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF85 DUP5 DUP3 DUP6 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF97 DUP2 PUSH2 0xDD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFB0 PUSH0 DUP4 ADD DUP5 PUSH2 0xF8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFCC JUMPI PUSH2 0xFCB PUSH2 0xDB5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFD9 DUP6 DUP3 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFEA DUP6 DUP3 DUP7 ADD PUSH2 0xDFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1038 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x104B JUMPI PUSH2 0x104A PUSH2 0xFF4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1064 PUSH0 DUP4 ADD DUP7 PUSH2 0xF8E JUMP JUMPDEST PUSH2 0x1071 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x107E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xEB7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10BD DUP3 PUSH2 0xE13 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C8 DUP4 PUSH2 0xE13 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10E0 JUMPI PUSH2 0x10DF PUSH2 0x1086 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO PUSH0 0xC5 0xCF 0x21 PUSH17 0x6AB1DFE4BF3A6BFABC86D421BBD15D8316 SELFBALANCE PUSH28 0x210D704DBFCA5F64736F6C634300081A003300000000000000000000 ",
							"sourceMap": "264:340:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;506:95:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;506:95:6:-;1531:13:0;:11;:13::i;:::-;576:17:6::1;582:2;586:6;576:5;:17::i;:::-;506:95:::0;;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7439:208:2:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9682:432:2:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:442::-;6574:4;6612:2;6601:9;6597:18;6589:26;;6625:71;6693:1;6682:9;6678:17;6669:6;6625:71;:::i;:::-;6706:72;6774:2;6763:9;6759:18;6750:6;6706:72;:::i;:::-;6788;6856:2;6845:9;6841:18;6832:6;6788:72;:::i;:::-;6425:442;;;;;;:::o;6873:180::-;6921:77;6918:1;6911:88;7018:4;7015:1;7008:15;7042:4;7039:1;7032:15;7059:191;7099:3;7118:20;7136:1;7118:20;:::i;:::-;7113:25;;7152:20;7170:1;7152:20;:::i;:::-;7147:25;;7195:1;7192;7188:9;7181:16;;7216:3;7213:1;7210:10;7207:36;;;7223:18;;:::i;:::-;7207:36;7059:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "876000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"decimals()": "427",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 264,
									"end": 604,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 264,
									"end": 604,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 264,
									"end": 604,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 498,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 311,
									"end": 498,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 311,
									"end": 498,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 311,
									"end": 498,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 311,
									"end": 498,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 311,
									"end": 498,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 311,
									"end": 498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 311,
									"end": 498,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 420,
									"end": 432,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "6368656D697374546F6B656E0000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4348544B00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 450,
									"end": 490,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 456,
									"end": 465,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 479,
									"end": 489,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 479,
									"end": 487,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 479,
									"end": 487,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 479,
									"end": 487,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 479,
									"end": 489,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 479,
									"end": 489,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 479,
									"end": 489,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 479,
									"end": 489,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 479,
									"end": 489,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 473,
									"end": 475,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 473,
									"end": 489,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 473,
									"end": 489,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 473,
									"end": 489,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 473,
									"end": 489,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 473,
									"end": 489,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 473,
									"end": 489,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 473,
									"end": 489,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 467,
									"end": 470,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 467,
									"end": 489,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 467,
									"end": 489,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 489,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 467,
									"end": 489,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 489,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 467,
									"end": 489,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 467,
									"end": 489,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 450,
									"end": 455,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 450,
									"end": 455,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 455,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 450,
									"end": 490,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 490,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 450,
									"end": 490,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 450,
									"end": 490,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 450,
									"end": 490,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 311,
									"end": 498,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 264,
									"end": 604,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 264,
									"end": 604,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 7,
									"value": "132"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6690,
									"end": 6695,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 6672,
									"end": 6696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6660,
									"end": 6697,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6840,
									"end": 6842,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6829,
									"end": 6838,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6825,
									"end": 6843,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6921,
									"end": 6922,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6919,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6906,
									"end": 6923,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6897,
									"end": 6903,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 6853,
									"end": 6924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 6937,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6985,
									"end": 7062,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6982,
									"end": 6983,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6975,
									"end": 7063,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7086,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 7079,
									"end": 7080,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7072,
									"end": 7087,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7106,
									"end": 7110,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7096,
									"end": 7111,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7165,
									"end": 7173,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7217,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7209,
									"end": 7210,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7205,
									"end": 7218,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7184,
									"end": 7218,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7184,
									"end": 7218,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7123,
									"end": 7225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7292,
									"end": 7297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7299,
									"end": 7303,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7323,
									"end": 7329,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7314,
									"end": 7329,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7314,
									"end": 7329,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7347,
									"end": 7352,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7338,
									"end": 7352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7338,
									"end": 7352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7382,
									"end": 7383,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7372,
									"end": 7380,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7369,
									"end": 7384,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7477,
									"end": 7481,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7472,
									"end": 7475,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7468,
									"end": 7482,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 7462,
									"end": 7466,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7459,
									"end": 7483,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7486,
									"end": 7504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 7486,
									"end": 7504,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7456,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7526,
									"end": 7534,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7951,
									"end": 7955,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7944,
									"end": 7949,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7940,
									"end": 7956,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7931,
									"end": 7956,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7931,
									"end": 7956,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7519,
									"end": 7970,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8001,
									"end": 8005,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7995,
									"end": 7999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7991,
									"end": 8006,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7983,
									"end": 8006,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7983,
									"end": 8006,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8054,
									"end": 8062,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 8031,
									"end": 8063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8031,
									"end": 8063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8063,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8019,
									"end": 8063,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7361,
									"end": 8073,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7231,
									"end": 8079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8139,
									"end": 8144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8330,
									"end": 8338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8351,
									"end": 8352,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8342,
									"end": 8352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8342,
									"end": 8352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8353,
									"end": 8358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8353,
									"end": 8358,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8320,
									"end": 8360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8379,
									"end": 8383,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8396,
									"end": 8397,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8397,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8387,
									"end": 8397,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8398,
									"end": 8403,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8369,
									"end": 8405,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8465,
									"end": 8469,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8513,
									"end": 8514,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8550,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8508,
									"end": 8535,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8526,
									"end": 8527,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8517,
									"end": 8527,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8517,
									"end": 8527,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8528,
									"end": 8533,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 8544,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 8579,
									"end": 8587,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8576,
									"end": 8593,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 8596,
									"end": 8614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8596,
									"end": 8614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8573,
									"end": 8616,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 8653,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8642,
									"end": 8643,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8638,
									"end": 8654,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 8629,
									"end": 8654,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8629,
									"end": 8654,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8680,
									"end": 8683,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8673,
									"end": 8678,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8670,
									"end": 8684,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 8687,
									"end": 8705,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8687,
									"end": 8705,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8667,
									"end": 8707,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8720,
									"end": 8725,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8458,
									"end": 8735,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8844,
									"end": 8846,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8834,
									"end": 8842,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8831,
									"end": 8847,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8825,
									"end": 8828,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 8819,
									"end": 8823,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8816,
									"end": 8829,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8812,
									"end": 8848,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8794,
									"end": 8796,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 8784,
									"end": 8792,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8781,
									"end": 8797,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8776,
									"end": 8778,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 8770,
									"end": 8774,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8767,
									"end": 8779,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8763,
									"end": 8798,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8747,
									"end": 8858,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8900,
									"end": 8908,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8894,
									"end": 8898,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8890,
									"end": 8909,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 8881,
									"end": 8909,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8881,
									"end": 8909,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8938,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8928,
									"end": 8933,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8925,
									"end": 8939,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8922,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8975,
									"end": 8980,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8975,
									"end": 8980,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8744,
									"end": 8990,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 9053,
									"end": 9056,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9043,
									"end": 9051,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9037,
									"end": 9041,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9034,
									"end": 9035,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9015,
									"end": 9057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 9015,
									"end": 9057,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9000,
									"end": 9057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9089,
									"end": 9093,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9084,
									"end": 9087,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9080,
									"end": 9094,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9073,
									"end": 9078,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9070,
									"end": 9095,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9098,
									"end": 9116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9098,
									"end": 9116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9067,
									"end": 9118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9147,
									"end": 9151,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9140,
									"end": 9145,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9136,
									"end": 9152,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9127,
									"end": 9152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8085,
									"end": 9158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9199,
									"end": 9206,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9239,
									"end": 9243,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 9232,
									"end": 9237,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9228,
									"end": 9244,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9217,
									"end": 9244,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9250,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9164,
									"end": 9250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9314,
									"end": 9319,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9356,
									"end": 9360,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9338,
									"end": 9361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9338,
									"end": 9361,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9330,
									"end": 9361,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9330,
									"end": 9361,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9398,
									"end": 9406,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 9382,
									"end": 9407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9382,
									"end": 9407,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9370,
									"end": 9407,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9370,
									"end": 9407,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9463,
									"end": 9529,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9453,
									"end": 9461,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9447,
									"end": 9451,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9426,
									"end": 9530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9426,
									"end": 9530,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9417,
									"end": 9530,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9417,
									"end": 9530,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9256,
									"end": 9537,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9256,
									"end": 9537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9583,
									"end": 9590,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9624,
									"end": 9625,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9606,
									"end": 9626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9606,
									"end": 9626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9601,
									"end": 9626,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9601,
									"end": 9626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9658,
									"end": 9659,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9640,
									"end": 9660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9640,
									"end": 9660,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9635,
									"end": 9660,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9635,
									"end": 9660,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9695,
									"end": 9696,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9692,
									"end": 9693,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9688,
									"end": 9697,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9735,
									"end": 9746,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 9717,
									"end": 9747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9717,
									"end": 9747,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9706,
									"end": 9747,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9706,
									"end": 9747,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9896,
									"end": 9897,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9887,
									"end": 9894,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9883,
									"end": 9898,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9877,
									"end": 9899,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 9857,
									"end": 9858,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9850,
									"end": 9859,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9830,
									"end": 9913,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9926,
									"end": 9944,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9926,
									"end": 9944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9807,
									"end": 9946,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9591,
									"end": 9953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9543,
									"end": 9953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9999,
									"end": 10002,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10036,
									"end": 10037,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 10018,
									"end": 10038,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10018,
									"end": 10038,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10013,
									"end": 10038,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10013,
									"end": 10038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10070,
									"end": 10071,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 10052,
									"end": 10072,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10052,
									"end": 10072,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10047,
									"end": 10072,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10047,
									"end": 10072,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10095,
									"end": 10096,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10092,
									"end": 10093,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10088,
									"end": 10097,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10081,
									"end": 10097,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10081,
									"end": 10097,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10116,
									"end": 10119,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10113,
									"end": 10114,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10110,
									"end": 10120,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 10123,
									"end": 10141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10123,
									"end": 10141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10107,
									"end": 10143,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9959,
									"end": 10150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10261,
									"end": 10266,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 10243,
									"end": 10267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10243,
									"end": 10267,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10238,
									"end": 10241,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10231,
									"end": 10268,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10156,
									"end": 10274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10156,
									"end": 10274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10429,
									"end": 10433,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10467,
									"end": 10469,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 10456,
									"end": 10465,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10452,
									"end": 10470,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10444,
									"end": 10470,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10444,
									"end": 10470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 10548,
									"end": 10549,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10537,
									"end": 10546,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10533,
									"end": 10550,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10524,
									"end": 10530,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 10480,
									"end": 10551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 10480,
									"end": 10551,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10629,
									"end": 10631,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10618,
									"end": 10627,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10614,
									"end": 10632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10605,
									"end": 10611,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10561,
									"end": 10633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10561,
									"end": 10633,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10711,
									"end": 10713,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 10700,
									"end": 10709,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10696,
									"end": 10714,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10687,
									"end": 10693,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10643,
									"end": 10715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10643,
									"end": 10715,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10722,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10280,
									"end": 10722,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10821,
									"end": 10825,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10859,
									"end": 10861,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 10848,
									"end": 10857,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10844,
									"end": 10862,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10836,
									"end": 10862,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10836,
									"end": 10862,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10940,
									"end": 10941,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10929,
									"end": 10938,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10925,
									"end": 10942,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10916,
									"end": 10922,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10872,
									"end": 10943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10872,
									"end": 10943,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10950,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 264,
									"end": 604,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 264,
									"end": 604,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 264,
									"end": 604,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 604,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 264,
									"end": 604,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 264,
									"end": 604,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 604,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 264,
									"end": 604,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 264,
									"end": 604,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220445fc5cf21706ab1dfe4bf3a6bfabc86d421bbd15d8316477b210d704dbfca5f64736f6c634300081a0033",
									".code": [
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 264,
											"end": 604,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 506,
											"end": 601,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 506,
											"end": 601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 506,
											"end": 601,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 506,
											"end": 601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 506,
											"end": 601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 506,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 506,
											"end": 601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 506,
											"end": 601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 506,
											"end": 601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 506,
											"end": 601,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 506,
											"end": 601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 582,
											"end": 584,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 586,
											"end": 592,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 576,
											"end": 581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 576,
											"end": 593,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 576,
											"end": 593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 576,
											"end": 593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6574,
											"end": 6578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6612,
											"end": 6614,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6601,
											"end": 6610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6615,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6693,
											"end": 6694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6682,
											"end": 6691,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6678,
											"end": 6695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6675,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 6625,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 6625,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6774,
											"end": 6776,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6750,
											"end": 6756,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 6706,
											"end": 6778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 6706,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6856,
											"end": 6858,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6845,
											"end": 6854,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 6859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6832,
											"end": 6838,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 6788,
											"end": 6860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 6788,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 6873,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6921,
											"end": 6998,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7008,
											"end": 7023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7046,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7032,
											"end": 7047,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7099,
											"end": 7102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 7136,
											"end": 7137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7118,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 7118,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7113,
											"end": 7138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7170,
											"end": 7171,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7152,
											"end": 7172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7152,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7147,
											"end": 7172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7195,
											"end": 7196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7181,
											"end": 7197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7219,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7220,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7223,
											"end": 7241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 7207,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.3.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.3.0/utils/Context.sol",
								"contracts/chemistToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chemistToken.sol\":\"ChemistToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.3.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts@5.3.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/chemistToken.sol\":{\"keccak256\":\"0x6fd1648cf0194a8e8e6a50b66c5de96a2aca30e1d990625a6b162ed59b358fcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db2e2e7457343b74551b7943f57bbe64310d71a5b8a6ad523368607637d19c46\",\"dweb:/ipfs/QmNm4JBMfXdWdq2s8gtC3c1KHYPSfNQFqdqe4hRooHW3ZW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/chemistToken.sol:ChemistToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/chemistToken.sol:ChemistToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/chemistToken.sol:ChemistToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/chemistToken.sol:ChemistToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/chemistToken.sol:ChemistToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/chemistToken.sol:ChemistToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.3.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.3.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.3.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.3.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.3.0/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.3.0/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.3.0/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.3.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.3.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/chemistToken.sol": {
				"ast": {
					"absolutePath": "contracts/chemistToken.sol",
					"exportedSymbols": {
						"ChemistToken": [
							984
						],
						"ERC20": [
							799
						],
						"Ownable": [
							147
						]
					},
					"id": 985,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "83:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@5.3.0/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 985,
							"sourceUnit": 800,
							"src": "111:74:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "119:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.3.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@5.3.0/access/Ownable.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 985,
							"sourceUnit": 148,
							"src": "187:73:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 938,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "195:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 940,
										"name": "ERC20",
										"nameLocations": [
											"289:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "289:5:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "289:5:6"
								},
								{
									"baseName": {
										"id": 942,
										"name": "Ownable",
										"nameLocations": [
											"296:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "296:7:6"
									},
									"id": 943,
									"nodeType": "InheritanceSpecifier",
									"src": "296:7:6"
								}
							],
							"canonicalName": "ChemistToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 984,
							"linearizedBaseContracts": [
								984,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "ChemistToken",
							"nameLocation": "273:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 967,
										"nodeType": "Block",
										"src": "439:59:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "456:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "467:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "473:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 961,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "479:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "479:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "473:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "467:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "450:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "450:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "450:40:6"
											}
										]
									},
									"id": 968,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "6368656d697374546f6b656e",
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "379:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_db2887d43530754cb02d22ecac160291b64b96f6ec44e5c35e3c2d8c45ab1fb0",
														"typeString": "literal_string \"chemistToken\""
													},
													"value": "chemistToken"
												},
												{
													"hexValue": "4348544b",
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "395:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_440b4635a4f2cbf7cba0463fe25fd8b9ec3a32db5b76693e4159b8902eceee9e",
														"typeString": "literal_string \"CHTK\""
													},
													"value": "CHTK"
												}
											],
											"id": 952,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 949,
												"name": "ERC20",
												"nameLocations": [
													"373:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "373:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "373:29:6"
										},
										{
											"arguments": [
												{
													"id": 954,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "420:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 955,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 953,
												"name": "Ownable",
												"nameLocations": [
													"412:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "412:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "412:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "331:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "323:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "350:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "342:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:41:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:0:6"
									},
									"scope": 984,
									"src": "311:187:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "565:36:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "582:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "586:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 977,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "576:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "576:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 975,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 974,
												"name": "onlyOwner",
												"nameLocations": [
													"555:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "555:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "555:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "515:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "528:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "520:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "540:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "532:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "519:28:6"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:6"
									},
									"scope": 984,
									"src": "506:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 985,
							"src": "264:340:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "83:523:6"
				},
				"id": 6
			}
		}
	}
}